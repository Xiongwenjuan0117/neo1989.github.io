<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>愚苏记</title>
  
  <subtitle>To no avail but try.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://neo1989.net/"/>
  <updated>2020-11-04T08:24:49.703Z</updated>
  <id>https://neo1989.net/</id>
  
  <author>
    <name>Neo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「LeetCode」 322. Coin Change (M)</title>
    <link href="https://neo1989.net/Cramming/learn-by-cramming-2/"/>
    <id>https://neo1989.net/Cramming/learn-by-cramming-2/</id>
    <published>2020-11-03T15:44:40.000Z</published>
    <updated>2020-11-04T08:24:49.703Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.</p><p><strong>Example 1:</strong></p><p>Input: coins = [1, 2, 5], amount = 11<br>Output: 3<br>Explanation: 11 = 5 + 5 + 1</p><p><strong>Example 2:</strong></p><p>Input: coins = [2], amount = 3<br>Output: -1</p><p><strong>Note:</strong><br>You may assume that you have an infinite number of each kind of coin.</p></blockquote><h3 id="思路">思路</h3><pre><code>dp[i] = min(dp[i], dp[i-c] + 1)</code></pre><h3 id="Python">Python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">coinChange</span><span class="params">(coins, amount)</span>:</span></span><br><span class="line">    dp = [<span class="number">0</span>] + [float(<span class="string">'inf'</span>) <span class="keyword">for</span> i <span class="keyword">in</span> range(amount)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, amount+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> coins:</span><br><span class="line">            <span class="keyword">if</span> c &lt;= i:</span><br><span class="line">                dp[i] = min(dp[i], dp[i-c] + <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span> <span class="keyword">if</span> dp[amount] &gt; amount <span class="keyword">else</span> dp[amount]</span><br></pre></td></tr></table></figure><h3 id="Golang">Golang</h3><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">coinChange</span><span class="params">(coins []<span class="keyword">int</span>, amount <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    dp := <span class="built_in">make</span>([]<span class="keyword">int</span>, amount+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= amount; i++ &#123;</span><br><span class="line">        dp[i] = amount + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i&lt;=amount; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> _, c := <span class="keyword">range</span>(coins) &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= c &amp;&amp; dp[i] &gt; dp[i-c] + <span class="number">1</span> &#123;</span><br><span class="line">                dp[i] = dp[i-c] + <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dp[amount] &gt; amount &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dp[amount]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Rust">Rust</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">coin_change</span></span>(coins: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;, amount: <span class="built_in">i32</span>) -&gt; <span class="built_in">i32</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> dp: <span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt; = <span class="built_in">vec!</span>[<span class="number">0</span>; (amount+<span class="number">1</span>) <span class="keyword">as</span> <span class="built_in">usize</span>];</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..amount+<span class="number">1</span> &#123;</span><br><span class="line">        dp[i <span class="keyword">as</span> <span class="built_in">usize</span>] = amount + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..amount+<span class="number">1</span>&#123;</span><br><span class="line">        coins.iter().for_each(|c|</span><br><span class="line">            <span class="keyword">if</span>(*c &lt;= i &amp;&amp; dp[i <span class="keyword">as</span> <span class="built_in">usize</span>] &gt; dp[(i - *c) <span class="keyword">as</span> <span class="built_in">usize</span>] + <span class="number">1</span>) &#123;</span><br><span class="line">                dp[i <span class="keyword">as</span> <span class="built_in">usize</span>] = dp[(i - *c) <span class="keyword">as</span> <span class="built_in">usize</span>] + <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> dp[amount <span class="keyword">as</span> <span class="built_in">usize</span>] &gt; amount &#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dp[amount <span class="keyword">as</span> <span class="built_in">usize</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C">C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(<span class="keyword">int</span>* coins, <span class="keyword">int</span> coinsSize, <span class="keyword">int</span> amount)</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> POS_INF = <span class="number">1.0</span> / <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">float</span> dp[amount+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=amount; i++)&#123;</span><br><span class="line">         dp[i] = (i == <span class="number">0</span>) ? <span class="number">0</span> : POS_INF;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=amount; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;coinsSize; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> c = coins[j];</span><br><span class="line">            <span class="keyword">if</span> (c &lt;= i &amp;&amp; (<span class="keyword">float</span>)dp[i] &gt; dp[i-c] + <span class="number">1</span>) &#123;</span><br><span class="line">                dp[i] = dp[i-c] + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dp[amount] &gt; (<span class="keyword">float</span>)amount ? <span class="number">-1</span> : (<span class="keyword">int</span>)dp[amount];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java">Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(<span class="keyword">int</span>[] coins, <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">double</span> dp[] = <span class="keyword">new</span> <span class="keyword">double</span>[amount+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=amount; i++) &#123;</span><br><span class="line">       dp[i] = i == <span class="number">0</span> ? <span class="number">0</span> : Double.POSITIVE_INFINITY;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=amount; i++) &#123;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> c: coins) &#123;</span><br><span class="line">           <span class="keyword">if</span> (c &lt;= i &amp;&amp; dp[i] &gt; dp[i-c] + <span class="number">1</span>) &#123;</span><br><span class="line">               dp[i] = dp[i-c] + <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> dp[amount] &gt; amount ? -<span class="number">1</span> : (<span class="keyword">int</span>)dp[amount];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Javascript">Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> coinChange = <span class="function"><span class="keyword">function</span>(<span class="params">coins, amount</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> dp = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;=amount; i++)&#123;</span><br><span class="line">        dp[i] = (i == <span class="number">0</span>) ? <span class="number">0</span> : <span class="literal">Infinity</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=amount; i++) &#123;</span><br><span class="line">        coins.forEach(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (c &lt;= i) &#123;</span><br><span class="line">                dp[i] = <span class="built_in">Math</span>.min(dp[i], dp[i - c] + <span class="number">1</span>)</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;) </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[amount] &gt; amount ? <span class="number">-1</span> : dp[amount]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/coder/leetcode/leetcode-322.png" alt="Submissions"></p><h3 id="Reference-参考">Reference 参考</h3><p>[1] <a href="https://leetcode.com/problems/coin-change" target="_blank" rel="noopener">322. Coin Change</a></p>]]></content>
    
    <summary type="html">
    
      磨刀不误砍柴工
    
    </summary>
    
    
      <category term="Cramming" scheme="https://neo1989.net/categories/Cramming/"/>
    
    
      <category term="LeetCode" scheme="https://neo1989.net/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>「LeetCode」 62. Unique Paths (M)</title>
    <link href="https://neo1989.net/Cramming/learn-by-cramming-1/"/>
    <id>https://neo1989.net/Cramming/learn-by-cramming-1/</id>
    <published>2020-11-02T15:30:09.000Z</published>
    <updated>2020-11-04T08:24:48.246Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A robot is located at the top-left corner of a m x n grid (marked ‘Start’ in the diagram below).<br>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked ‘Finish’ in the diagram below).<br>How many possible unique paths are there?</p><p><strong>Example 1:</strong><br><img src="https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png" alt=""><br>Input: m = 3, n = 7<br>Output: 28</p><p><strong>Example 2:</strong></p><pre><code>Input: m = 3, n = 2Output: 3Explanation:From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:1. Right -&gt; Down -&gt; Down2. Down -&gt; Down -&gt; Right3. Down -&gt; Right -&gt; Down</code></pre></blockquote><h3 id="思路">思路</h3><p>由于机器人只能向右走和向下走，所以:</p><ol><li>地图的第一行和第一列的走法数都是 1</li><li>其他任意一点的走法数是: dp[i][j] = dp[i-1][j] + dp[i][j-1]</li></ol><h3 id="Python">Python</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">uniquePaths</span><span class="params">(m: int, n: int)</span> -&gt; int:</span></span><br><span class="line">    path = [[<span class="number">1</span> <span class="keyword">if</span> i==<span class="number">0</span> <span class="keyword">or</span> j == <span class="number">0</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">for</span> j <span class="keyword">in</span> range(m)] <span class="keyword">for</span> i <span class="keyword">in</span> range(n)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, m):</span><br><span class="line">            path[i][j] = path[i<span class="number">-1</span>][j] + path[i][j<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> path[n<span class="number">-1</span>][m<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><h3 id="Golang">Golang</h3><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">uniquePaths</span><span class="params">(m <span class="keyword">int</span>, n <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">dp := <span class="built_in">make</span>([][]<span class="keyword">int</span>, n)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">dp[i] = <span class="built_in">make</span>([]<span class="keyword">int</span>, m)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; m; i++ &#123;</span><br><span class="line">dp[<span class="number">0</span>][i] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">dp[i][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line"><span class="keyword">for</span> j := <span class="number">1</span>; j &lt; m; j++ &#123;</span><br><span class="line">dp[i][j] = dp[i<span class="number">-1</span>][j] + dp[i][j<span class="number">-1</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[n<span class="number">-1</span>][m<span class="number">-1</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Rust">Rust</h3><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">pub</span> <span class="function"><span class="keyword">fn</span> <span class="title">unique_paths</span></span>(m: <span class="built_in">i32</span>, n: <span class="built_in">i32</span>) -&gt; <span class="built_in">i32</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> m: <span class="built_in">usize</span> = m <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">    <span class="keyword">let</span> n: <span class="built_in">usize</span> = n <span class="keyword">as</span> <span class="built_in">usize</span>;</span><br><span class="line">    <span class="keyword">let</span> <span class="keyword">mut</span> paths: <span class="built_in">Vec</span>&lt;<span class="built_in">Vec</span>&lt;<span class="built_in">i32</span>&gt;&gt; = <span class="built_in">vec!</span>[<span class="built_in">vec!</span>[<span class="number">0</span>; m]; n];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..m &#123;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..n &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>)&#123;</span><br><span class="line">                paths[j][i] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..m &#123;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..n &#123;</span><br><span class="line">            paths[j][i] = paths[j-<span class="number">1</span>][i] + paths[j][i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> paths[n-<span class="number">1</span>][m-<span class="number">1</span>];      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C">C</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> paths[n][m]; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>) &#123;</span><br><span class="line">                paths[j][i] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                paths[j][i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;n; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;m; i++) &#123;</span><br><span class="line">            paths[j][i] = paths[j<span class="number">-1</span>][i] + paths[j][i<span class="number">-1</span>];  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> paths[n<span class="number">-1</span>][m<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Java">Java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[][] paths =  <span class="keyword">new</span> <span class="keyword">int</span>[n][m];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>) &#123;</span><br><span class="line">                paths[i][j] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                paths[i][j] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>; j &lt; m; j++) &#123;</span><br><span class="line">            paths[i][j] = paths[i-<span class="number">1</span>][j] + paths[i][j-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> paths[n-<span class="number">1</span>][m-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Javascript">Javascript</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uniquePaths = <span class="function"><span class="keyword">function</span>(<span class="params">m, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> paths = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">        paths[j] = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j ==<span class="number">0</span>) &#123;</span><br><span class="line">                paths[j][i] = <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                paths[j][i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j=<span class="number">1</span>; j&lt;n; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;m; i++) &#123;</span><br><span class="line">            paths[j][i] = paths[j<span class="number">-1</span>][i] + paths[j][i<span class="number">-1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> paths[n<span class="number">-1</span>][m<span class="number">-1</span>]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><hr><p><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/coder/leetcode/leetcode-62.png" alt="Submissions"></p><h3 id="Reference-参考">Reference 参考</h3><p>[1] <a href="https://leetcode.com/problems/unique-paths" target="_blank" rel="noopener">62. Unique Paths</a></p>]]></content>
    
    <summary type="html">
    
      磨刀不误砍柴工
    
    </summary>
    
    
      <category term="Cramming" scheme="https://neo1989.net/categories/Cramming/"/>
    
    
      <category term="LeetCode" scheme="https://neo1989.net/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>自学机器学习十诫</title>
    <link href="https://neo1989.net/MachineLearning/the-10-commandments-of-self-taught-machine-learning-engineers/"/>
    <id>https://neo1989.net/MachineLearning/the-10-commandments-of-self-taught-machine-learning-engineers/</id>
    <published>2020-11-02T09:27:40.000Z</published>
    <updated>2020-11-03T03:21:10.344Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>戒律和自学这两个词不能掉以轻心。一个人必须对自己的教育和启蒙负责。如果你忽略它，别人就会为你做选择。</p></blockquote><h2 id="Gists-摘要">Gists 摘要</h2><h3 id="数学，代码和数据是你最重要的三位一体">数学，代码和数据是你最重要的三位一体</h3><p>任何有效的机器学习管道都是数学、代码和数据的交叉。每一项只有和另一项在一起时才会有效果。</p><p>如果你的数据质量很差，那么无论你的数学计算多么优雅或代码多么高效都没用。</p><p>如果你的数据质量最高，但你的数学计算错误，那么你的结果可能会不是很好，甚至会更糟，造成伤害。</p><p>如果你的数据和数学都是世界级的，但是你的代码效率很低，那么你将无法获得扩展带来的好处。</p><p>数据为你提供了一个包含自然瑰宝的采矿地点。数学就是你的十字镐。代码可以让你建立一支挥舞着十字镐的机器人队伍。</p><p>这三位一体是你系统的输入(你拥有的)和输出(你想要的)之间的桥梁。</p><h3 id="唯一例外">唯一例外</h3><p>除了不能平衡这三位一体之外，还有一个更大的罪过：忘记这三位一体是为谁服务的。即使是执行得最好、由最优雅的数学驱动的代码，如果不能为客户提供服务，从最丰富的数据中获得洞察也毫无意义。</p><p>工程师经常会发现自己迷失在一个过程中，忘记了最初想要的结果。尽管他们怀着良好的意图进行，但他们忘记了，意图并不像行动那么重要。</p><p>三位一体至少要为客户提供点好处，总比什么都不提供要好。</p><p>需要澄清的是，如果你的先进模型需要47倍的时间才能提高1%的准确率，那么它是否提供了最好的体验？</p><h3 id="不要被三位一体给骗了">不要被三位一体给骗了</h3><p>无论你多么崇拜这三位一体，你都不应该被你的爱蒙蔽。自学成才的机器学习工程师是他们自己的最大的怀疑者。</p><p>他们知道，数据不能进行证明，只能进行反驳(只要在十亿数据中有一个数据点就能证明之前的概念是错误的)，一点点糟糕的数学运算就会产生极端的后果(自然不是线性的)，代码的效率只有在它最薄弱的地方才有。</p><p>无论三位一体多么神圣，直觉也不应被忽视。如果一个结果好得令人难以置信，除非你很幸运，否则它很可能就是错的。</p><h3 id="和客户保持好关系">和客户保持好关系</h3><p>让机器做它们擅长的事情(反复重复过程)。让你去做你擅长的事情时(关心、设身处地、提问、倾听、领导、教学)。</p><p>你的客户不像你那样关心三位一体。他们关心他们的需求是否得到满足。</p><h3 id="向先驱致敬">向先驱致敬</h3><p>当你想到计算机、机器学习、人工智能、数学等领域时，你会想到谁的名字？</p><p>Ada Lovelace，Geoffrey Hinton，Yann LeCun，Yoshua Bengio，Alan Turing，Fei Fei Li，Grace Hopper，Andrew Ng，Jon Von Neumann，Alan Kay，Stuart Russel，Peter Norvig？</p><p>当然，在你听到或记住的所有名字中，有1000个名字功不可没，但却从历史书中消失了。</p><p>后起之秀应该认可前辈们做出的巨大努力，但也应该认可他们中的每一个人都会告诉这位新晋的机器学习工程师同样的事情：这个领域的未来取决于你的工作。</p><h3 id="适时重写">适时重写</h3><p>你的目标应该是在第一时间构建可靠的东西。但随着技能的提高，你可能会重构之前的作品，拆掉它们，用新的视角重新创造它们。</p><p>自学成才的机器学习工程师都明白，就像大自然一样，软件和机器学习项目永远不会完成，它们一直在运动。数据变化，代码在新的硬件上执行，一个天才发现了一个计算高效，低内存依赖的优化器适合，并称之为“亚当”。</p><p>你不仅应该对这些变化持开放态度，还应该欢迎它们。一旦它们出现，请使用你最好的判断力来判断它们是否值得实现到你的系统中 —— 因为有些东西是新的，并不意味着它是必需的。</p><h3 id="不要成为工具奴">不要成为工具奴</h3><p>在编程界，一个常见的轶事是粉刷自行车棚。它说的是一个程序员，或者一组程序员，担心的是车棚应该是什么颜色，而不是问一些重要的问题，比如车棚是否真的可以存放自行车。</p><p>当然，这个自行车棚也可以用电脑程序来代替。</p><p>在机器学习的世界里，你会听到关于R还是Python、TensorFlow还是PyTorch、书籍还是课程、数学还是code first(两者都有，记得这三位一体吧)、Spark还是Hadoop、Amazon Web Services还是谷歌云平台、VSCode还是Jupyter、Nvidia还是……的无休止的争论。</p><p>所有的比较都是有效的，但没有一个值得与对方争论。</p><p>你应该回答的真正问题是：用什么可以让我以最快、最可靠的方式建立我的想法？</p><p>一旦你问自己这个问题，你会发现其他人都在问自己同样的问题。</p><p>工程师的诅咒是从工具开始，然后寻找问题，而不是从问题开始，然后寻找工具，只有到了那个时候，如果没有合适的工具，才应该去构建它。</p><p>学习资源也是如此。数学、代码和数据的三位一体，在你学习它的时候就是不变的，唯一重要的是你如何使用它。</p><p>不要忘记：许多问题可以在没有机器学习的情况下解决。</p><h3 id="想法就是生意">想法就是生意</h3><p>不要把一个执行好想法的人与窃取你想法的人混为一谈。你的想法在别人手中比在你的头脑中更有价值。</p><p>作为一名工程师，你的角色不仅是建立自己的想法，而且还要与他人沟通，向他们展示如何从这些想法中获益。如果你缺乏这样的沟通能力，你应该与有这种能力的人合作，或者寻求培养这种能力。</p><p>在一个没人知道该相信什么的世界里，你可以通过做真实的自己来区分自己。诚实面对你做的东西所能提供的和你所不知道的。能够承认自己的无知是一种优势，而不是弱点。</p><p>好的技术总是胜利的，撒谎永远不会胜利。构建技术。不要撒谎。</p><h3 id="你的邻居、同事、同学和伙伴也在思考这个问题">你的邻居、同事、同学和伙伴也在思考这个问题</h3><p>你看到别人的进步而嫉妒吗？或者你把它看作是你能做到的事情的动力？</p><p>你对别人的成功的感觉就是你自己成功时候的感觉。</p><h3 id="不能贪">不能贪</h3><p>你应该寻求建立你运用三位一体的技能，回答那些你想要提供服务的人的问题，但你不应该带着欲望这样做。欲望会诅咒你，让你永远过于严肃地看待未来，而不是享受你现在所拥有的。</p><p>对提高技能的渴望的治疗方法是培养对学习的热爱。</p><p>自学成才的机器学习工程师能够很快地学习利用数学、代码和数据力量所需的概念，但不能匆忙行事。他们明白学习任何有价值的技术都需要时间，如果是这样的话，还不如享受这个过程。</p><p>从一开始，你就是对自己的启蒙和教育负责的人。知道了这一点，你就应该选择那些无论你有什么样的运气都能成功的项目。这个项目是否满足了你的好奇心？它是否对你的技能构成挑战？它可以让你遵守这些戒律吗？如果是这样，就足够了。</p><p>最后，在沿着自己的道路行进的同时，自学成才的机器学习工程师在他们的脑海中一直保持着这样的印象：</p><ul><li>没有知识就没有资质。</li><li>没有行动就没有思想。</li><li>没有享受就没有学习。</li><li>没有风格就没有创造。</li><li>没有练习就没有技巧。</li><li>没有目标就没有工具。</li><li>没有交易就没有展示。</li><li>没有怀疑就没有假设。</li><li>没有贡献就没有消耗。</li><li>没有对现在的爱，就没有对未来的渴望</li></ul><p>最重要的是，没有三位一体就没有机器学习。</p><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://danielbourke.substack.com/p/the-10-commandments-of-self-taught" target="_blank" rel="noopener">The 10 Commandments of Self-Taught Machine Learning Engineers</a></p>]]></content>
    
    <summary type="html">
    
      Principles for using math, code and data to seduce Mother Nature into revealing her secrets.
    
    </summary>
    
    
      <category term="MachineLearning" scheme="https://neo1989.net/categories/MachineLearning/"/>
    
    
      <category term="Coder" scheme="https://neo1989.net/tags/Coder/"/>
    
  </entry>
  
  <entry>
    <title>Machine Learning Project Checklist</title>
    <link href="https://neo1989.net/MachineLearning/machine-learning-project-checklist/"/>
    <id>https://neo1989.net/MachineLearning/machine-learning-project-checklist/</id>
    <published>2020-10-29T08:04:32.000Z</published>
    <updated>2020-10-29T09:11:08.232Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Obviously, you should feel free to adapt this checklist to you needs.</p></blockquote><h2 id="Gists-摘要">Gists 摘要</h2><h3 id="Frame-the-Problem-and-Look-at-the-Big-Picture-架构问题，关注蓝图">Frame the Problem and Look at the Big Picture (架构问题，关注蓝图)</h3><ul><li>Define the objective in business terms.</li><li>How will your solutiion be used?</li><li>What are the current solutions/workarounds (if any)?</li><li>How should you frame this problem (supervised/unsupervised, online/offline, etc.)?</li><li>How should performance be measured?</li><li>Is the performance measure aligned with the business objective?</li><li>What would be the minimun performance needed to reach the business objective?</li><li>What are comparable problems? Can you reuse experience or tools?</li><li>Is human expertise available?</li><li>How would you solve the problem manually?</li><li>List the assumptions you (or others) have made so far.</li><li>Verify assumptions if possible.</li></ul><h3 id="Get-the-Data-获取数据">Get the Data (获取数据)</h3><pre><code>Note: automate as much as possible so you can easily get fresh data.</code></pre><ul><li>List the data you need and how much you need.</li><li>Find and document where you can get that data.</li><li>Check how much space it will take.</li><li>Check legal obligations, and get authorization if necessary.</li><li>Get access authorizations.</li><li>Create a workspace (with enough storage space).</li><li>Get the data.</li><li>Convert the data to a format you can easily manipulate (without changing the data itself).</li><li>Ensure sensitive information is deleted or protected(e.g., anonymized).</li><li>Check the size and type of data (time series, sample, geographical, etc.).</li><li>Sample a test set , put it aside, and never look at it (no data snooping!).</li></ul><h3 id="Explore-the-Data-研究数据">Explore the Data (研究数据)</h3><pre><code>Note: try to get insights from a field expert for these steps.</code></pre><ul><li>Create a copy of the data for exploration (sampling it down to manageable size if necessary).</li><li>Create a Jupyter notebook to keep a record of your data exploration.</li><li>Study each attribute and its characteristics:<ul><li>Name</li><li>Type(categorical, int/float, bounded/unbounded, text, structured, etc.)</li><li>% of missing values</li><li>Noisiness and type of noise(stochastic, outliers, rounding errors, etc.)</li><li>Possibly useful for the tasks.</li><li>Type of distribution (Gaussian, uniform, logarithmic, etc.)</li></ul></li><li>For supervised learning tasks, identify the target attribute(s).</li><li>Visualize the data.</li><li>Study the correlations between attributes.</li><li>Study how you would solve the problem manually.</li><li>Identify the promising transformations you may want to apply.</li><li>Identify extra data that would be useful (go back to “Get the Data”).</li><li>Document what you have learned.</li></ul><h3 id="Prepare-the-Data-准备数据">Prepare the Data (准备数据)</h3><pre><code>Notes:    - Work on copies of the data (keep the original dataset intact).    - Write functins for all data transformations you apply, for five reasons:        - So you can easily prepare the data the next time you get a fresh dataset        - So you can apply these transformations in future projects        - To clean and prepare the test set         - To clean and prepare new data instances once your solution is live        - To make it easy to treat your preparation choices as hyperparameters</code></pre><ul><li>Data cleaning:<ul><li>Fix or remove outliters (optional).</li><li>Fill in missing values (e.g., with zero, mean, median…) or drop their rows (or columns).</li></ul></li><li>Feature selection (optimization):<ul><li>Drop the attributes that provide no useful information for the task.</li></ul></li><li>Feature engineering, where appropriate:<ul><li>Discretize continuous feature.</li><li>Decompose features (e.g., categorical, data/time, etc.).</li><li>Add promising transformations of features (e.g., log(x), squrt(x), x^2, etc.).</li><li>Adggregate features into promising new features.</li></ul></li><li>Feature scaling: standardize or normalize feature.</li></ul><h3 id="Short-List-Promising-Models-简要列出期望的模型">Short-List Promising Models (简要列出期望的模型)</h3><pre><code>  Notes:    - If the data is huge, you may want to sample smaller training sets so you can train many different models in a reasonable time (be aware that this penalizes complex models such as large neural nets or Random Forests).    - Once again, try to automate these steps as much as possible.</code></pre><ul><li>Train many quick and dirty models from different categories (e.g., linear, naive Bayes, SVM, Random Forests, neural net, etc.) useing standard parameters.</li><li>Measure and compare their performance.<ul><li>For each model, use N-fold cross-validation and compute the mean and standard deviation of the performance measure on the N folds.</li></ul></li><li>Analyze the most significant variables for each algorithm.</li><li>Analyze the types of errors the models make.<ul><li>What data would a human have used to avoid these errors?</li></ul></li><li>Have a quick round of feature selection and engineering.</li><li>Have one or two more quick iterations of the five previous steps.</li><li>Short-list the top three to five most promising models, preferring models that make different types of errors.</li></ul><h3 id="Fine-Tune-the-System-微调系统">Fine-Tune the System (微调系统)</h3><pre><code>Notes:    - You will want to use as much data as possible for this step, especially as you move thoward the end of fine-tuning.    - As always automate what you can.</code></pre><ul><li>Fine-tune the hyperparameters using cross-validation:<ul><li>Treat your data transformation choices as hyperparameters, especially when you are not sure about them (e.g., should I replace missing values with zero or with the median value? Or just drop the rows?).</li><li>Unless there are very few hyperparameter values to explore, prefer random search over grid search, If training is very long, you many prefer a Bayesian optimization approach (e.g., using Gaussian process priors, as described by Jasper Snoek, Hugo Larochelle, and Ryan Adams (<a href="https://goo.gl/PEFfGr" target="_blank" rel="noopener">https://goo.gl/PEFfGr</a>)).</li></ul></li><li>Try Ensemble methods. Combining your best models will often perform better than running them individually.</li><li>Once you are confident about your final model, measure its performance on the test set to estimate the generalization error.</li></ul><h3 id="Present-Your-Solution-展示解决方案">Present Your Solution (展示解决方案)</h3><ul><li>Document what you have done.</li><li>Create a nice presentation.<ul><li>Make sure you highlight the big picture first.</li></ul></li><li>Explain why your solution achieves the business objective.</li><li>Don’t forget to present interesting points you noticed along the way.<ul><li>Describe what worked and what did not.</li><li>List your assumptions and your system’s limitations.</li></ul></li><li>Ensure ypur key findings are communicated through beautiful visualizations or easy-to-remember statements (e.g., “the median income is the number-one predictor of housing prices”)</li></ul><h3 id="Lanch-启动">Lanch! (启动)</h3><ul><li>Get your solution ready for production (plug into production data inputs, write unit tests, etc.).</li><li>Write monitoring code to check your system’s live performance at regular intervals and trigger alerts when it drops.<ul><li>Beware of slow degradation too: models tend to “rot” as data evolves.</li><li>Measuring performance may require a human pipeline (e.g., via a crowdsourcing service).</li><li>Also monitor your inputs’ quality (e.g., a malfuctioning sensor sending random values, or another teams’ output becoming stale). This is particularly important for online learning systems.</li></ul></li><li>Retrain your models on a regular basis on fresh data (automate as much as possible).</li></ul><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B07GSVW63X" target="_blank" rel="noopener">Hands-On Machine Learning with Scikit-Learn and TensorFlow</a></p>]]></content>
    
    <summary type="html">
    
      Guide you through your Machine Learning Projects.
    
    </summary>
    
    
      <category term="MachineLearning" scheme="https://neo1989.net/categories/MachineLearning/"/>
    
    
      <category term="Coder" scheme="https://neo1989.net/tags/Coder/"/>
    
  </entry>
  
  <entry>
    <title>MachineLearning 的“最佳实践”</title>
    <link href="https://neo1989.net/MachineLearning/a-few-useful-things-to-Know-about-machine-Learning/"/>
    <id>https://neo1989.net/MachineLearning/a-few-useful-things-to-Know-about-machine-Learning/</id>
    <published>2020-09-14T02:48:21.000Z</published>
    <updated>2020-09-14T07:55:19.027Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Machine learning algorithms can figure out how to perform important tasks by generalizing from examples. This is often feasible and cost-effective where manual programming is not. As more data becomes available, more ambitious problems can be tackled.<br>Machine learning is widely used in computer science and other fields. However, developing successful machine learning applications requires a substantial amount of “black art” that is difficult to find in textbooks.<br>This article summarizes 12 key lessons that machine learning researchers and practitioners have learned. These include pitfalls to avoid, important issues to focus on, and answers to common questions.</p></blockquote><h2 id="Gists-摘要">Gists 摘要</h2><ul><li><p><strong>Learning = Representation (表征) + Evaluation (评估) + optimization (优化)</strong></p><table><thead><tr><th style="text-align:left">Representation</th><th style="text-align:left">Evaluation</th><th style="text-align:left">Optimization</th></tr></thead><tbody><tr><td style="text-align:left">Instances</td><td style="text-align:left">Accuracy/Error rate</td><td style="text-align:left">Combinatorial optimization</td></tr><tr><td style="text-align:left">  K-nearest neighbor</td><td style="text-align:left">Precision and recall (精准率&amp;召回率)</td><td style="text-align:left">  Greedy search (贪心搜索)</td></tr><tr><td style="text-align:left">  Support vector machines</td><td style="text-align:left">Squared error (平方误差)</td><td style="text-align:left">  Beam search (集束搜索)</td></tr><tr><td style="text-align:left">Hyperplanes</td><td style="text-align:left">Likelihood (似然)</td><td style="text-align:left">Branch-and-bound (分支界限法)</td></tr><tr><td style="text-align:left">  Naive Bayes</td><td style="text-align:left">Posterior probability (后验概率)</td><td style="text-align:left">Continuous optimization</td></tr><tr><td style="text-align:left">  Logistic regression</td><td style="text-align:left">Information gain (信息增益)</td><td style="text-align:left">  Unconstrained</td></tr><tr><td style="text-align:left">Decision trees</td><td style="text-align:left">K-L divergence (相对熵)</td><td style="text-align:left">    Gradient descent (梯度下降)</td></tr><tr><td style="text-align:left">Sets of rules</td><td style="text-align:left">Cost/Utility</td><td style="text-align:left">    Conjugate gradient (共轭梯度)</td></tr><tr><td style="text-align:left">  Propositional rules</td><td style="text-align:left">Margin</td><td style="text-align:left">Quasi-Newton methods (拟牛顿法)</td></tr><tr><td style="text-align:left">  Logic programs</td><td style="text-align:left"></td><td style="text-align:left">Constrained</td></tr><tr><td style="text-align:left">Neural networks</td><td style="text-align:left"></td><td style="text-align:left">  Linear programming (线性规划)</td></tr><tr><td style="text-align:left">Graphical models</td><td style="text-align:left"></td><td style="text-align:left">  Quadratic programming (二次规划)</td></tr><tr><td style="text-align:left">  Bayesian networks (贝叶斯网络)</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">  Conditional random fields (条件随机场)</td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table></li><li><p><strong>It’s Generalization that counts (泛化能力是ML的核心)</strong><br>机器学习的基本目标是对训练集之外的样本进行泛化。</p></li><li><p><strong>Data alone is not enough</strong> (仅有数据是不够的)<br>先验知识</p></li><li><p><strong>Overfitting has many faces</strong> (过拟合具有多面性)</p><ul><li><p>理解过拟合的一种方法是将泛化的误差进行分解，分为偏差和方差。</p><ul><li>bias可以理解是预测或估计很多次的均值</li><li>variance表示很多次估计的方差</li><li>线性模型一般variance小，bias大</li><li>树模型一般variance大，bias小<br><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/coder/027856ac555b11205f8cd408d43468c7.png" alt="Bias and variance in dart-throwing"></li></ul></li><li><p>下面几个思路可能减小过拟合</p><ul><li>交叉验证</li><li>加入正则项，避免模型过于复杂</li></ul></li><li><p>没有噪声也会出现过拟合</p></li></ul></li><li><p><strong>Intuition Fails in high Dimensions (直觉不适用于高纬度空间)</strong></p><ul><li>维数灾难</li><li>降维 (缺失值比率, 低方差滤波, 高相关滤波, 随机森林,  PCA, t-SNE, UMAP…)</li></ul></li><li><p><strong>Theoretical Guarantees are not What they seem (理论保证不一定可靠)</strong></p></li><li><p><strong>Feature engineering is the Key</strong><br>特征决定机器学习的上限，模型只是在逼近这个上限。</p></li><li><p><strong>More Data Beats a cleverer algorithm</strong><br>收集更多的数据、处理更多的数据</p></li><li><p><strong>Learn many models, not Just one</strong><br>bagging, boosting, stacking</p></li><li><p><strong>Simplicity Does not imply Accuracy (简单并不意味着准确)</strong></p></li><li><p><strong>Representable Does not imply Learnable (可表示并不意味着可学习)</strong></p></li><li><p><strong>Correlation Does not imply Causation (相关并不意味着因果)</strong></p></li></ul><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://homes.cs.washington.edu/~pedrod/papers/cacm12.pdf" target="_blank" rel="noopener">A Few Useful Things to Know About Machine Learning</a><br>[2] <a href="https://www.jiqizhixin.com/articles/Pedro-Domingos-12-useful-things-to-know-about-machine-learning" target="_blank" rel="noopener">Pedro Domingos总结机器学习研究的12个宝贵经验</a></p>]]></content>
    
    <summary type="html">
    
      folk knowledge
    
    </summary>
    
    
      <category term="MachineLearning" scheme="https://neo1989.net/categories/MachineLearning/"/>
    
    
  </entry>
  
  <entry>
    <title>Git Commit Message Conventions</title>
    <link href="https://neo1989.net/CheatSheet/git-commit/"/>
    <id>https://neo1989.net/CheatSheet/git-commit/</id>
    <published>2020-08-14T09:49:57.000Z</published>
    <updated>2020-09-14T02:43:12.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="格式">格式</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>(<span class="tag">&lt;<span class="name">scope</span>&gt;</span>): <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="type-必须">type (必须)</h3><ul><li>feat: 新功能, feature</li><li>fix: bugfix</li><li>docs: 文档</li><li>style: 代码格式化</li><li>refacotr: 重构</li><li>perf: 优化</li><li>test: 增加测试</li><li>chore: 维护</li><li>revert: 回滚</li><li>merge: 代码合并</li><li>sync: 同步主线或者分支</li></ul><h3 id="scope-可选">scope (可选)</h3><p>scope用于说明 commit 影响的范围</p><h3 id="subject-必须">subject (必须)</h3><p>subject是 commit 目的的简短描述</p><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y" target="_blank" rel="noopener">AngularJS Git Commit Message Conventions</a></p>]]></content>
    
    <summary type="html">
    
      Rules are rules.
    
    </summary>
    
    
      <category term="CheatSheet" scheme="https://neo1989.net/categories/CheatSheet/"/>
    
    
      <category term="Coder" scheme="https://neo1989.net/tags/Coder/"/>
    
  </entry>
  
  <entry>
    <title>《精确表达》</title>
    <link href="https://neo1989.net/Reading/precise-presentation/"/>
    <id>https://neo1989.net/Reading/precise-presentation/</id>
    <published>2020-08-10T05:34:28.000Z</published>
    <updated>2020-08-10T07:45:51.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gists-摘要">Gists 摘要</h2><h3 id="何为逻辑">何为逻辑</h3><ul><li>为了让与我们背景不同的人们听懂我们的表达，有必要在讲话时注意逻辑。</li><li>所谓逻辑，是指把语言合理地组织气力啊。</li><li>要想把语言合理地组织到一起，只有 <em>纵向逻辑</em> 和 <em>横向逻辑</em> 两种组织方法。</li><li>当对方感到不理解时，无非有两种反应：“真的是这样吗” 和 “仅仅如此吗”。</li><li>当对方质疑“真的是这样吗”的时候，说明我们的纵向逻辑比较薄弱，也就是说，未能恰当的说明因果关系。</li><li>当对方质疑“仅仅如此吗”的时候，说明我们的横向逻辑比较薄弱，也就是说出现了遗落或者重复。</li><li>逻辑合理与否是由对方判断的，不要过于相信自己的逻辑。</li></ul><h4 id="建立纵向逻辑">建立纵向逻辑</h4><ul><li>所谓纵向逻辑，是指“因为A，所以B”，即该逻辑达到了“任何人都认同的状态”。</li><li>当对方质疑真假时，说明我们的纵向逻辑存在不合理的地方。</li><li>导致纵向逻辑薄弱的三个主要原因<ul><li>想当然地认为对方能够立即自己脑海里的隐性前提，没有吧所有的前提条件罗列出来。</li><li>把性质不同的东西混为一谈。</li><li>把偶然事件视为必然事件。</li></ul></li><li>只要解决上述三个因素，就不会再有人质疑“真的是这样吗”。</li></ul><h4 id="建立横向逻辑">建立横向逻辑</h4><ul><li>合理的横向逻辑是指合理定义整体，没有遗漏和重复。</li><li>由于现实世界相当复杂，人们对事务的看法各有不同，所以首先应该注意说话者与听话者的“语言的层次感”是否一致。</li><li>为把说话者与听话者的语言层次归到同一平面，应该考虑如下两点<ul><li>确认对方是以何种身份立场思考问题的。</li><li>确认对方设想的是何种场景。</li></ul></li><li>当我们把语言层次归到同一平面后，我们必须给“整体”下一个合适的定义。倘若未能正确定义“整体”，再怎么努力避免遗漏也是白费功夫。</li><li>利用已有的知名框架来把握整体无疑是个轻松省事的好办法，但应做到具体情况具体分析。<ul><li><a href="https://wiki.mbalib.com/wiki/5P%E8%90%A5%E9%94%80%E7%90%86%E8%AE%BA" target="_blank" rel="noopener">5P营销理论</a></li><li><a href="https://wiki.mbalib.com/wiki/3C%E6%88%98%E7%95%A5%E4%B8%89%E8%A7%92%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">3C战略三角模型</a></li><li><a href="https://wiki.mbalib.com/wiki/%E9%BA%A6%E8%82%AF%E9%94%A17S%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">麦肯锡7S模型</a></li><li><a href="https://wiki.mbalib.com/wiki/SWOT%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">SWOT分析模型</a></li><li><a href="https://wiki.mbalib.com/wiki/AIDAS%E5%8E%9F%E7%90%86" target="_blank" rel="noopener">AIDAS原理</a></li><li><a href="https://wiki.mbalib.com/wiki/PDCA%E5%BE%AA%E7%8E%AF" target="_blank" rel="noopener">PDCA循环</a></li></ul></li><li>在勾勒崭新的框架时，我们应发挥六度思维的想象力。<ul><li>眼前可看见的三维世界。</li><li>看不见的三维世界。</li></ul></li><li>避免遗漏之后，最后剩下的工序是消除重复。如果是复杂的概念，可以利用“MECE模型”进行查重。<br><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/cure/f92ba84e968434964e09ce899fb331ea.png" alt="MECE模型"><ul><li>为了判断是否存在重复，“MECE模型”把两个命题分别排列在纵轴和横轴。纵轴和横轴又分别简单地划分为“是”和“否”两栏。</li></ul></li><li>一旦制作出完美的横向逻辑，肯定不会再有人质疑“仅仅如此吗”。</li><li>金字塔结构堪称逻辑思考的集大成者，然而它的构建绝非一蹴而就。</li><li>逻辑思考能力是假说验证能力、问题解决能力等所有能力的基础，也是最为重要的技能。</li></ul><h3 id="何为假说验证能力">何为假说验证能力</h3><ul><li>就算逻辑正确，对方也不见得会表示赞同。</li><li>回应对方质疑时需要验证假说型思考。</li><li>假说验证型思考必须经历如下五个步骤<ul><li>理解目的</li><li>把握论点</li><li>构建假说</li><li>实施验证</li><li>提取启发</li></ul></li></ul><h4 id="理解目的">理解目的</h4><ul><li>“理解交流的目的”包括两个要点，即：对“讨论的立场”进行确认；理解“对方的要求”。</li><li>讨论的立场不同，沟通方法就不同，沟通方法包括“逼迫型”和“引导型”这两种。</li><li>商务交流中往往需要采用“逼迫型”沟通法，要求对方对某事做出某项判断。</li><li>当你需要对方对某事做出某项判断时，请在提交方案时把具体要求作为结束语。</li><li>要做到理解对方的要求，必须学会倾听。</li><li>要想提高提案能力，不仅应该强化逻辑思考能力，还应该注重感性思维，时刻关注对方的心理。</li></ul><h4 id="把握论点">把握论点</h4><ul><li>论点就是影响到对方最终判断结果的判断项目。</li><li>偏离论点的情况无外乎四种类型。<ul><li>没能明确讲话的立场。</li><li>错误理解对方的要求。</li><li>未能找出对方所需判断的具体项目。</li><li>重复对方早已知晓的答案。</li></ul></li><li>避免讨论偏离的具体对策。<ul><li>明确立场。</li><li>正确理解目的。</li><li>磨炼构建横向逻辑的能力。</li><li>了解对方的知识及经验水平。</li></ul></li><li>当自己的论点与对方不一致时，应找出原因，并采取相应的措施。</li></ul><h4 id="构建假说">构建假说</h4><ul><li>假说是指针对论点做出的假设性回答。</li><li>理解假说需要注意如下三点。<ul><li>假说归根结底是指针对论点做出的假设性回答。没有论点就没有假说。</li><li>假说不是没有根据的瞎猜，是根据有限的信息做出的假设性回答。</li><li>由于假说缺乏客观事实根据，因此和答案不同。</li></ul></li><li>之所以需要假说，是因为它能缩小选项范围、提高讨论效率。</li><li>为了不让对方费脑子思考，构建假说相当重要。</li><li>构建假说需要以某些信息作为依据。假说不可能凭空出现。</li><li>在工作过程中，我们到底在构建假说，还是在验证假说？我们时常要思考这点。</li><li>构建假说需要经历三个步骤：牢记论点；时刻想着答案是什么；广泛阅读大量信息。</li><li>只要熟练掌握 <em>横向逻辑</em> 和 <em>纵向逻辑</em> ，就能扩大假说范围，提高假说的准确度。</li></ul><h4 id="实施验证">实施验证</h4><ul><li>验证是指用客观事实和逻辑来证明假说正确与否的过程。</li><li>“没有论点的假说” 和 “没有假说的验证” 都毫无意义。</li><li>验证没有明确的尽头，又是辛苦调查分析之后却只能推断出看似理所当然的答案。</li><li>尽管验证很难，但一旦成功进行了验证，就能中止争论、推进课题。</li><li>验证结果当中有80%证明了理所当然的答案，20%促成了新的发现。</li><li>在验证过程中，应当有意识地添加确凿的事实根据。</li><li>最具说服力的信息应当是 “定量、一手、第三方” 三剑合一。</li></ul><h4 id="提取启发">提取启发</h4><ul><li>所谓启发，就是“有益于把握论点核心的信息”。</li><li>启发既不是假说验证后得出的“答案”，也不是“随意的主张”。</li><li>虽然我们很少能取得完美的“答案”，但是只要我们能获得一些“启发”，就能推动事情的进展。</li><li>提取启发需注意如下三点<ul><li>正确理解目的和论点。</li><li>把握论点的核心。</li><li>不要设计无法验证的方案。</li></ul></li></ul><h3 id="何为会议设计">何为会议设计</h3><ul><li>会议之所以无聊，是因为没能“设计”好会议。</li><li>如下四种原因导致人们无法设计出气氛热烈的会议。<ul><li>缺乏“自己正在开会”的意识。</li><li>虽然准备了会议的“议题”，却没有准备会议的“论点”。</li><li>把“整体方案” 和 “本次方案”混为一谈。</li><li>未能顺着对方的逻辑解说。</li></ul></li><li>设计会议时应注意两个要素，即 “着陆点” 和 “着陆形式” 。</li><li>会议设计极大影响了方案的结构。</li></ul><h4 id="确定着陆点">确定着陆点</h4><ul><li>高清会议的“定位” 与 “输入/输出”, 有利于顺利找到会议的着陆点。</li><li>三种视角决定了会议的定位<ul><li>验证假说的视角。</li><li>沟通的视角。</li><li>解决问题的视角。</li></ul></li><li>如果我们无视会议的具体定位，即使拖拖拉拉地展开漫长的讨论，也不会总结出什么有效的内容。</li><li>搞错会议定位有时会造成严重的后果，我们的方案非但无法继续推进，反而会被要求重做。</li><li>充分意识到会议“输入/输出管理”的重要性。</li><li>会议的“输入/输出管理”应注意如下三点<ul><li>是否输入了“新鲜感”？</li><li>是否输入了“前进感”？</li><li>输出是否过于急躁？</li></ul></li></ul><h4 id="决定着陆形式">决定着陆形式</h4><ul><li>迎合对方的风格，顺着对方的理解方式及思考模式设计出来的方案更容易获得对方的理解。</li><li>把握对方风格的三种视角<ul><li>是 “阅读者” 还是 “倾听者”？</li><li>是 “全局纵观派” 还是 “连锁把握派”？</li><li>是 “自上而下派” 还是 “自下而上派”？</li></ul></li></ul><h3 id="何为制作商务文本的能力">何为制作商务文本的能力</h3><ul><li>把自己想表达的东西总结成书面形式需要经历五个步骤<ul><li>写成文字信息。</li><li>制作图表。</li><li>把文字信息和图表组合成幻灯片的样式。</li><li>把多张幻灯片组合成资料包，构成一个完整的“故事”。</li><li>把各种资料包组合成符合会议目的的资料群。</li></ul></li><li>使用模板制作商务文本，即用“组装零件法”来制作。</li><li>我们应当努力制作出“一目了然，不被误解”的商务文本。</li><li>制作的商务文本不要违反人类的阅读习惯。</li><li>要制作简洁易懂的商务文本，需要拥有删除三种内容的勇气。<ul><li>不必要的信息</li><li>不必要的文字</li><li>不必要的属性信息</li></ul></li><li>牢记“让对方思考就是我们的失败”，制作出一看就懂的商务文本。</li></ul><h4 id="文字信息应简洁易懂">文字信息应简洁易懂</h4><ul><li>文字信息是指我们在幻灯片上罗列的“最想传达给对方的内容”，长度大约三行。</li><li>文字信息主要包括三种内容，“说明”、“事实”、“启发”。</li><li>排列文字信息的地方有两处，开头句 和 总结句。</li><li>有内容的文字信息应具备四个要素<ul><li>目的性：是否符合目的及论点？</li><li>崭新性：是否给对方带来新的发现？</li><li>明确新：是否清楚说明了具体意思？</li><li>放心性：是否告知了对方行动方向？</li></ul></li><li>书写文字信息是的三个注意事项<ul><li>简洁表述</li><li>统一词汇</li><li><em>照顾对方的情绪</em></li></ul></li><li>简洁表述，即凝缩文字信息有四种手法<ul><li>把结论放在前面：先写结论，后写理由</li><li>删除多余的语句：删除不影响沟通的语句</li><li>避免词汇重复：同一词汇反复出现时，应进行概括总结</li><li>使用概括性词汇：长句短说，用成语、熟语进行概括</li></ul></li></ul><h4 id="把文字信息制作成图表">把文字信息制作成图表</h4><ul><li>我们应当用简单易懂的图表尽可能多地表达我们想说的内容。</li><li>可以把图表分为 “内容” 与 “排版” 这两个概念。<ul><li>内容：插图、统计图、文本三种。</li><li>排版：关联图、流程图、树状图、表格四种。</li></ul></li><li>要把图表制作的简单易懂，还需要从三个方面着手修饰<ul><li>尽量使用图形。</li><li>设计合适的标题。</li><li>在重点部分加以标识。</li></ul></li><li>明确自己所要传达的信息，在此基础上选择符合事根据的图表内容和符合逻辑的图表排版，然后组装制成图表。</li></ul><h4 id="配置幻灯片">配置幻灯片</h4><ul><li>制作幻灯片是需要注意如下两点<ul><li>幻灯片的上方必须添加文字信息。</li><li>文字信息和图表应相互呼应。</li></ul></li><li>灵活使用如下三个技巧，可以有效提高幻灯片的完成度。<ul><li>按照人类的阅读习惯，从左上方至右下方排列图表。</li><li>最大程度地利用纸张。</li><li>尽可能对齐行和列，整齐排列图表。</li></ul></li></ul><h4 id="完成资料包">完成资料包</h4><ul><li>资料包中必须包含启发。</li><li>根据对方的逻辑和使用场合来制作资料包<ul><li>自上而下纵观全体型：适合参会者理解程度较高、只需短时间重点介绍结论的会议。</li><li>自上而下连锁把握型：适合短时间内强调必要部分的会议。</li><li>自下而上纵观全体型：适合花时间慢慢解释来获得对方认同的会议。</li><li>自下而上连锁把握型：适合参会者理解能力较低，需要细细讲解的会议。</li></ul></li><li>分别采用三个切入点<ul><li>操作视点：能够清楚了解具体工作的进展情况。</li><li>项目视点：具有全局观。</li><li>论点视点：能够明确地传达信息。</li></ul></li></ul><h4 id="整合资料群">整合资料群</h4><ul><li>为了实现会议目的而把所有必要的资料包整合在一起，这就是资料群。</li><li>资料群由八个资料包构成。<ul><li>摘要：高度凝缩的天内容。</li><li>前提：会议的背景及目的。</li><li>全景：论点及验证任务的整体情况。</li><li>内容：关于本次会议议题的说明、事实以及启发。</li><li>论点清单：尤其需要强调的讨论事项。</li><li>问答卡：用于引导参会者参与讨论的答题用纸。</li><li>日程安排：日程表以及下次会议之前所需开展的行动项目。</li><li>参考数据：虽然不符合故事线，但是有可能会用到的幻灯片。</li></ul></li></ul><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B07FYJH51B" target="_blank" rel="noopener">精准表达：让你的方案在最短的时间内打动人心</a></p>]]></content>
    
    <summary type="html">
    
      让你的方案在最短的时间内打动人心。
    
    </summary>
    
    
      <category term="Reading" scheme="https://neo1989.net/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>《Google工作法》</title>
    <link href="https://neo1989.net/Reading/how-to-work/"/>
    <id>https://neo1989.net/Reading/how-to-work/</id>
    <published>2020-06-08T15:10:10.000Z</published>
    <updated>2020-09-14T02:35:22.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gists-摘要">Gists 摘要</h2><ul><li><p>不依赖邮件</p><p>想办法“一次结束”<br>现将能够当场确定的事情定下来，切实地取得进展<br>思考不用邮件而让所有人一次做完的方法<br>给所有的工作都规定期限<br>将精力集中于“此时此刻”<br>选择一个能够让自己集中精神工作的环境</p></li><li><p>用集体智慧来进行思考</p><p>与逻辑分析相比“灵感”更加重要<br>灵活利用线索卡，大家一起进行思考<br>将企划会议变成大家一起思考的会议<br>积极听取其他部门和其他领域的人的意见</p></li><li><p>以10倍的速度思考</p><p>思考如何取得10倍的成果<br>为了取得10倍的成果必须要打破规则<br>为了进入下一个阶段，必须“让自己的工作消失”<br>像公司所有者那样思考</p></li><li><p>创建提高工作效率的人际关系</p><p>用“实物”说话可以使工作更有效率<br>取消多余的会议<br>与部下的交流每周一次就够了<br>在工作之外也建立起人际关系，可以使工作更有效率<br>优先与“新结识的人” “不断变化的人” “高水平的人”交流</p></li><li><p>迅速学习，向同事学习</p><p>学习 = 检索 + 询问专业人士·询问他人·询问同事<br>只有反馈远远不够，还要灵活利用“前馈”<br>预先建立一个能够轻松询问的交流关系<br>不断改变，坚持学习</p></li><li><p>简化心灵</p><p>偶尔关电脑<br>一分钟的冥想就能够改变注意力<br>在不同的时间段集中精力做一件事<br>不要尝试消灭感情，要保持中庸<br>休息也是自己的责任</p></li><li><p>破坏自己的工作</p><p>思考如何用IT代替自己工作<br>站在革新的一侧，不能袖手旁观<br>就算对技术细节不了解，也要跟上趋势<br>工作不能“和昨天一样”</p></li><li><p><strong>取得10倍成果的人的共同点</strong></p><ul><li>拥有预见性<br>预见机会与威胁<br>寻找周期、趋势以及规律<br>短期、中期和长期思考</li><li>换位思考</li><li>敢于提出自己的见解</li><li>敢于说真话</li><li>主动承担责任</li><li>积极参与交流</li><li>倾听自己内心的声音</li><li>打破常规</li><li>不害怕失败</li><li>勤于思考、保持怀疑</li><li>改变视角<br>整体视角<br>局部视角<br>反面视角<br>未来视角<br>顾客视角<br>竞争对手视角<br>特殊视角（一般情况下，更深层次的情况下，反常的情况下）</li></ul></li></ul><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B07ZNJ49JD" target="_blank" rel="noopener">Google工作法</a></p>]]></content>
    
    <summary type="html">
    
      工作效率提升10倍。
    
    </summary>
    
    
      <category term="Reading" scheme="https://neo1989.net/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>《科学学习》</title>
    <link href="https://neo1989.net/Reading/how-we-learn/"/>
    <id>https://neo1989.net/Reading/how-we-learn/</id>
    <published>2020-02-26T07:50:03.000Z</published>
    <updated>2020-06-08T05:50:12.594Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gists-摘要">Gists 摘要</h2><ul><li><p><span id="A"><strong>A</strong>nalogy 归纳类比</span><br>从两个或两个以上、外表看似迥异的例子之间找到共通的规律。</p></li><li><p><span id="B"><strong>B</strong>elonging 归属感</span><br>归属感让学习者更加投入，减少对行为是否得当、自己是否合群等问题的困扰。</p></li><li><p><span id="C"><strong>C</strong>ontrasting Cases 对比组合</span><br>通过对比两个或多个看似相同的例子来找到其中的细微差别。</p></li><li><p><span id="D"><strong>D</strong>eliberate Practice 精修勤练</span><br>针对某个具体的技能或概念进行专注而努力的练习，从而超越自身的现有水平。</p></li><li><p><span id="E"><strong>E</strong>laboration 详细阐释</span><br>详细阐释的过程就是在新信息与已知事物之间建立明确的关系。详细阐释过的内容在过了一段时间后也更容易被回忆起来。</p></li><li><p><span id="F"><strong>F</strong>eedback 反馈</span><br>反馈让人们感受到实际结果与理想目标之间的差异，从而帮助调整下一步行动。</p></li><li><p><span id="G"><strong>G</strong>eneration 自我生成</span><br>将来需要回忆什么，现在就练习回忆什么：利用一部分线索作为提示来生成目标记忆，这种训练可以提升记忆效果，使日后回忆起目标内容变得更加容易。</p></li><li><p><span id="H"><strong>H</strong>ands On 实践体验</span><br>通过运动感知活动来理解抽象的概念。</p></li><li><p><span id="I"><strong>I</strong>maginative Play 现象玩耍</span><br>想象玩耍是创造与真实世界不一样的故事世界。在充满乐趣的扮演过程中，人们以物喻物，用一种事物代表另一种事物。</p></li><li><p><span id="J"><strong>J</strong>ust-in-Time Telling 适时讲解</span><br>让学习者先体验问题，再学习知识或提供解决方案。</p></li><li><p><span id="K"><strong>K</strong>nowledge 知识与创新</span><br>培养并运用高效率的知识来解决重复性问题；培养为适应全新环境而创造新知识的能力。<br>创新与效率目的合二为一。<br>在学习初期应当着重强调创新的机会，而学习后期则应当专注于效率的提升。</p></li><li><p><span id="L"><strong>L</strong>istening and Sharing 倾听与共享</span><br>倾听和共享是协作学习的基石。协作过程中，学习者们一起完成任务、解决问题、共同学习。</p></li><li><p><span id="M"><strong>M</strong>aking 动手创造</span><br>创造作品或是完成任务，然后接受反馈意见并设定新目标。</p></li><li><p><span id="N"><strong>N</strong>orms 规范</span><br>社会规范是指导人们社交行为的非正式规则。社交行为可以决定人们学习的内容与方式。</p></li><li><p><span id="O"><strong>O</strong>bervation 观察</span><br>通过观察来进行学习的过程涉及观看并模仿他人的行为与情绪反应，以及间接看到他人行为所带来的结果。</p></li><li><p><span id="P"><strong>P</strong>articipation 参与</span><br>通过参与社交情境中的实践活动，学习者可以切身感受到学习目标、结果、方法，以及学习的意义。其首要挑战在于如何找到合适的方式，帮助初学者迈出第一步。</p></li><li><p><span id="Q"><strong>Q</strong>uestion Driven 问题驱动</span><br>通过回答提出的问题来开展学习可以激发好奇心、增强学习的目的、集中学习注意力、让知识融会贯通，还有可能提高学习者解决问题的能力。</p></li><li><p><span id="R"><strong>R</strong>eward 奖励</span><br>奖励某种行为会促使人们重复该行为。人们在学习新行为的过程中，可以借助持续的奖励来提供源源不断的动力，直到他们成功完成目标行为。</p></li><li><p><span id="S"><strong>S</strong>elf-Explanation 自我解读</span><br>通过把学习内容给自己讲解一遍的过程来加深理解。</p></li><li><p><span id="T"><strong>T</strong>eaching 以教促学</span><br>教学的过程能够提升老师自身对知识的理解，边教边学、以教促学。</p></li><li><p><span id="U"><strong>U</strong>ndoing 纠正错误</span><br>识别并取代错误的认知观念与思考方式。</p></li><li><p><span id="V"><strong>V</strong>isualization 可视化</span><br>将信息的结构关系用视觉的方式表达出来，可以帮助我们整理信息与想法。具体形式包括，地图、图表、草图、图像、文氏图、树状图、矩阵图，等等。</p></li><li><p><span id="W"><strong>W</strong>orked Examples 参考样例</span><br>参考样例是将步骤型的任务一步步示范出来，供学习者参考的方法。</p></li><li><p><span id="X">e<strong>X</strong>citement 激动兴奋</span><br>激动能够促进生理兴奋，从而帮助集中注意力并提升记忆效果。</p></li><li><p><span id="Y"><strong>Y</strong>es I Can 我能行</span><br>帮助学习者相信他们自己拥有成功的能力，从而勇敢面对挑战、坚持得更持久，并在失败面前更加坚韧不拔，愿意主动迎接更多挑战，直到实现更大的成就。</p></li><li><p><span id="Z"><strong>Z</strong>zz 睡上一觉</span><br>睡眠能够帮助人们把短期记忆固化为长期记忆，并将学习内容与自身知识融为一体。</p></li></ul><h2 id="Indexes-问题索引">Indexes 问题索引</h2><table><thead><tr><th style="text-align:center">Q</th><th style="text-align:center">As</th></tr></thead><tbody><tr><td style="text-align:center">回避具有挑战性的事情</td><td style="text-align:center"><a href="#B">B</a> <a href="#R">R</a> <a href="#Y">Y</a></td></tr><tr><td style="text-align:center">学习习惯不好</td><td style="text-align:center"><a href="#N">N</a></td></tr><tr><td style="text-align:center">群体中存在对某一类人群的偏见</td><td style="text-align:center"><a href="#B">B</a> <a href="#N">N</a> <a href="#L">L</a> <a href="#P">P</a></td></tr><tr><td style="text-align:center">遇到困难总是埋怨别人</td><td style="text-align:center"><a href="#Y">Y</a></td></tr><tr><td style="text-align:center">演讲或讲座让人昏昏欲睡</td><td style="text-align:center"><a href="#J">J</a> <a href="#X">X</a></td></tr><tr><td style="text-align:center">团队讨论让人觉得无聊, 容易走神</td><td style="text-align:center"><a href="#L">L</a> <a href="#Q">Q</a></td></tr><tr><td style="text-align:center">团队意见不一</td><td style="text-align:center"><a href="#L">L</a> <a href="#N">N</a></td></tr><tr><td style="text-align:center">对学习内容的理解出现差错</td><td style="text-align:center"><a href="#S">S</a> <a href="#U">U</a></td></tr><tr><td style="text-align:center">概念出现混淆</td><td style="text-align:center"><a href="#C">C</a></td></tr><tr><td style="text-align:center">只会被动接受知识，不会主动学习</td><td style="text-align:center"><a href="#I">I</a> <a href="#M">M</a> <a href="#Q">Q</a></td></tr><tr><td style="text-align:center">需要纠正具体做法中的错误</td><td style="text-align:center"><a href="#F">F</a> <a href="#R">R</a></td></tr><tr><td style="text-align:center">需要端正学习行为</td><td style="text-align:center"><a href="#N">N</a> <a href="#P">P</a></td></tr><tr><td style="text-align:center">需要纠正思维上的错误</td><td style="text-align:center"><a href="#F">F</a> <a href="#F">U</a></td></tr><tr><td style="text-align:center">难以着手，不知如何开始学习</td><td style="text-align:center"><a href="#O">O</a> <a href="#P">P</a> <a href="#R">R</a> <a href="#W">W</a></td></tr><tr><td style="text-align:center">理解抽象概念是遇到困难</td><td style="text-align:center"><a href="#A">A</a> <a href="#C">C</a> <a href="#H">H</a></td></tr><tr><td style="text-align:center">团队合作时遇到困难</td><td style="text-align:center"><a href="#L">L</a> <a href="#N">N</a></td></tr><tr><td style="text-align:center">看不出事物或概念之间的内在联系</td><td style="text-align:center"><a href="#J">J</a> <a href="#M">M</a> <a href="#Q">Q</a></td></tr><tr><td style="text-align:center">不把学习当回事</td><td style="text-align:center"><a href="#M">M</a> <a href="#T">T</a> <a href="#U">U</a></td></tr><tr><td style="text-align:center">不知道何时应用所学内容</td><td style="text-align:center"><a href="#A">A</a> <a href="#C">C</a> <a href="#J">J</a> <a href="#Q">Q</a></td></tr><tr><td style="text-align:center">不善于在思维中建立知识点间的联系</td><td style="text-align:center"><a href="#E">E</a> <a href="#S">S</a> <a href="#T">T</a></td></tr><tr><td style="text-align:center">不善于监控自己的学习进程</td><td style="text-align:center"><a href="#F">F</a> <a href="#S">S</a> <a href="#T">T</a></td></tr><tr><td style="text-align:center">觉得自己无法融入集体中</td><td style="text-align:center"><a href="#B">B</a> <a href="#N">N</a></td></tr><tr><td style="text-align:center">记不住学过的内容</td><td style="text-align:center"><a href="#E">E</a> <a href="#G">G</a> <a href="#Z">Z</a></td></tr><tr><td style="text-align:center">在团队中浑水摸鱼</td><td style="text-align:center"><a href="#L">L</a> <a href="#N">N</a> <a href="#T">T</a></td></tr><tr><td style="text-align:center">面对挑战过早放弃</td><td style="text-align:center"><a href="#Y">Y</a></td></tr><tr><td style="text-align:center">难以激励学习行为</td><td style="text-align:center"><a href="#N">N</a> <a href="#R">R</a> <a href="#P">P</a></td></tr><tr><td style="text-align:center">提升技能水平是遇到瓶颈</td><td style="text-align:center"><a href="#D">D</a> <a href="#F">F</a></td></tr><tr><td style="text-align:center">不重视反馈</td><td style="text-align:center"><a href="#F">F</a> <a href="#R">R</a> <a href="#T">T</a></td></tr><tr><td style="text-align:center">理解不够精确，不够严谨</td><td style="text-align:center"><a href="#C">C</a> <a href="#E">E</a> <a href="#J">J</a> <a href="#V">V</a></td></tr><tr><td style="text-align:center">遇事缺乏思考，冲动行事</td><td style="text-align:center"><a href="#I">I</a> <a href="#R">R</a></td></tr><tr><td style="text-align:center">注意力难以集中</td><td style="text-align:center"><a href="#X">X</a></td></tr><tr><td style="text-align:center">问题问不到点上</td><td style="text-align:center"><a href="#F">F</a> <a href="#O">O</a> <a href="#Q">Q</a></td></tr><tr><td style="text-align:center">教学过程低效</td><td style="text-align:center"><a href="#K">K</a> <a href="#J">J</a> <a href="#W">W</a></td></tr><tr><td style="text-align:center">缺乏独立思考</td><td style="text-align:center"><a href="#I">I</a> <a href="#K">K</a> <a href="#M">M</a></td></tr><tr><td style="text-align:center">缺乏真知灼见，创意枯竭</td><td style="text-align:center"><a href="#V">V</a> <a href="#Z">Z</a> <a href="#I">I</a> <a href="#K">K</a></td></tr><tr><td style="text-align:center">对学习提不起兴趣</td><td style="text-align:center"><a href="#M">M</a> <a href="#P">P</a> <a href="#R">R</a> <a href="#T">T</a></td></tr><tr><td style="text-align:center">讲解的内容发挥不了作用</td><td style="text-align:center"><a href="#J">J</a> <a href="#X">X</a> <a href="#C">C</a></td></tr><tr><td style="text-align:center">在集体中感到孤独</td><td style="text-align:center"><a href="#B">B</a> <a href="#P">P</a></td></tr><tr><td style="text-align:center">学习时总是习惯看答案</td><td style="text-align:center"><a href="#G">G</a> <a href="#J">J</a></td></tr><tr><td style="text-align:center">自信不足</td><td style="text-align:center"><a href="#B">B</a> <a href="#Y">Y</a></td></tr><tr><td style="text-align:center">关键知识点被埋没</td><td style="text-align:center"><a href="#A">A</a> <a href="#C">C</a> <a href="#J">J</a> <a href="#X">X</a></td></tr><tr><td style="text-align:center">遇到记忆相关的问题</td><td style="text-align:center"><a href="#E">E</a> <a href="#G">G</a></td></tr><tr><td style="text-align:center">概念错误或混淆</td><td style="text-align:center"><a href="#A">A</a> <a href="#U">U</a></td></tr><tr><td style="text-align:center">(老师) 对学习者的潜能估计不准确</td><td style="text-align:center"><a href="#P">P</a></td></tr><tr><td style="text-align:center">抓不住大局，迷失学习目的</td><td style="text-align:center"><a href="#A">A</a> <a href="#P">P</a> <a href="#V">V</a></td></tr><tr><td style="text-align:center">脱离学习群体</td><td style="text-align:center"><a href="#B">B</a></td></tr><tr><td style="text-align:center">过于自信，导致学不进去新的东西</td><td style="text-align:center"><a href="#L">L</a> <a href="#S">S</a> <a href="#U">U</a> <a href="#V">V</a> <a href="#F">F</a></td></tr><tr><td style="text-align:center">信息量过大，认知过载</td><td style="text-align:center"><a href="#J">J</a> <a href="#V">V</a> <a href="#W">W</a></td></tr><tr><td style="text-align:center">情感汹涌， 情绪过载</td><td style="text-align:center"><a href="#B">B</a> <a href="#Y">Y</a> <a href="#X">X</a></td></tr><tr><td style="text-align:center">对细节的辨识力不足</td><td style="text-align:center"><a href="#C">C</a></td></tr><tr><td style="text-align:center">怎么读也读不懂</td><td style="text-align:center"><a href="#E">E</a> <a href="#G">G</a> <a href="#S">S</a></td></tr><tr><td style="text-align:center">学着学着就犯困</td><td style="text-align:center"><a href="#X">X</a> <a href="#Z">Z</a></td></tr><tr><td style="text-align:center">知识点都懂， 却在综合测试中发挥的不好</td><td style="text-align:center"><a href="#C">C</a> <a href="#J">J</a></td></tr><tr><td style="text-align:center">练习技能的时候不认真</td><td style="text-align:center"><a href="#D">D</a> <a href="#F">F</a></td></tr><tr><td style="text-align:center">只会套公式，不求甚解</td><td style="text-align:center"><a href="#H">H</a> <a href="#J">J</a> <a href="#K">K</a> <a href="#W">W</a></td></tr><tr><td style="text-align:center">表现不佳，发挥失常</td><td style="text-align:center"><a href="#B">B</a> <a href="#D">D</a></td></tr><tr><td style="text-align:center">没有动力去做出尝试</td><td style="text-align:center"><a href="#B">B</a> <a href="#R">R</a> <a href="#Y">Y</a></td></tr><tr><td style="text-align:center">做出不切实际的期望</td><td style="text-align:center"><a href="#D">D</a> <a href="#Y">Y</a></td></tr><tr><td style="text-align:center">遇到不常见的情况不知道该如何应对，或者不知该表达何种情绪</td><td style="text-align:center"><a href="#O">O</a> <a href="#R">R</a></td></tr><tr><td style="text-align:center">道理讲不明白</td><td style="text-align:center"><a href="#R">R</a></td></tr><tr><td style="text-align:center">用语言描述说也说不明白</td><td style="text-align:center"><a href="#H">H</a> <a href="#O">O</a></td></tr></tbody></table><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B07D16LQKN" target="_blank" rel="noopener">科学学习：斯坦福黄金学习法则</a></p>]]></content>
    
    <summary type="html">
    
      活到老学到老。
    
    </summary>
    
    
      <category term="Reading" scheme="https://neo1989.net/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>Gianna and Kobe, 2.24</title>
    <link href="https://neo1989.net/SeizeTheDay/Bryant-2-and-24/"/>
    <id>https://neo1989.net/SeizeTheDay/Bryant-2-and-24/</id>
    <published>2020-02-24T07:45:54.000Z</published>
    <updated>2020-09-14T08:00:37.479Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/cure/4bbc4b6a10d50fb684da342e4883a8d2.png" alt="Farewell."></p>]]></content>
    
    <summary type="html">
    
      曼巴精神永存
    
    </summary>
    
    
      <category term="SeizeTheDay" scheme="https://neo1989.net/categories/SeizeTheDay/"/>
    
    
  </entry>
  
  <entry>
    <title>程序员能力矩阵</title>
    <link href="https://neo1989.net/CheatSheet/programmer-competency-matrix/"/>
    <id>https://neo1989.net/CheatSheet/programmer-competency-matrix/</id>
    <published>2020-02-01T10:17:43.000Z</published>
    <updated>2020-06-08T05:50:12.597Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://blog-1252568744.cos.ap-shanghai.myqcloud.com/coder/6bfd997477e99166c110e543662b7e81.png" alt="The Programmer's Life"></p><p>英文原文：<a href="http://sijinjoseph.com/programmer-competency-matrix/" target="_blank" rel="noopener">《Programmer Competency Matrix》</a></p><blockquote><p>Note that the knowledge for each level is cumulative.<br>Being at level n implies that you also know everything from the levels lower than n.</p></blockquote><h3 id="Computer-Science">Computer Science</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">$ 2^n$</th><th style="text-align:center">$n^2$</th><th style="text-align:center">$n$</th><th style="text-align:center">$log(n)$</th></tr></thead><tbody><tr><td style="text-align:center"><em>数据结构</em></td><td style="text-align:center">不知道数组和链表的差异</td><td style="text-align:center">能够解释和使用数据、链表、字典等，并能够用于实际的编程任务</td><td style="text-align:center">了解基本数据结构时间和空间的折中，比如数组vs链表，能够解释哈希表如何实现以及如何处理冲突，了解优先队列以及如何实现，等等</td><td style="text-align:center">高等数据结构知识，比如B树、二项堆、斐波那契堆、AVL树、红黑树、跳表、前缀树等</td></tr><tr><td style="text-align:center"><em>算法</em></td><td style="text-align:center">不能够找出一个数组的平均值</td><td style="text-align:center">排序、搜索、数据的结构遍历以及检索算法</td><td style="text-align:center">树，图，简单的贪婪算法和分治算法，有能力了解矩阵各层的相关性</td><td style="text-align:center">能够识别和编写动态规划方案，良好的图算法知识，良好的数值估算的知识，能够鉴定NP问题</td></tr><tr><td style="text-align:center"><em>系统编程</em></td><td style="text-align:center">不知道何为编译器、链接器、解释器</td><td style="text-align:center">对编译器、链接器、解释器有基本的了解。知道什么是汇编代码以及在硬件层如何工作。有一些虚拟内存和分页知识</td><td style="text-align:center">了解内核模式、用户模式、多线程、同步原语以及它们是怎么实现的，能够阅读汇编代码。了解网络协议和socket级别编程</td><td style="text-align:center">了解整个程序堆栈、硬件（CPU+内存+中断+微码）、二进制代码、汇编、静态和动态链接、编译、解释、JIT编译、GC、堆、栈、内存寻址 等</td></tr></tbody></table><h3 id="Software-Engineering">Software Engineering</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">$ 2^n$</th><th style="text-align:center">$n^2$</th><th style="text-align:center">$n$</th><th style="text-align:center">$log(n)$</th></tr></thead><tbody><tr><td style="text-align:center"><em>源码版本控制</em></td><td style="text-align:center">通过日期备份文件夹</td><td style="text-align:center">VSS和初级的CVS/SVN用户</td><td style="text-align:center">熟练地使用CVS和SVN特性。知道如何分支和归并，使用程序库补丁安装特性等</td><td style="text-align:center">有分布式VCS系统的知识。尝试过Bzr/Mecurial/Darcs/GIT</td></tr><tr><td style="text-align:center"><em>构建自动化</em></td><td style="text-align:center">只知道在IDE下编译</td><td style="text-align:center">知道如何在命令行下编译系统</td><td style="text-align:center">可以建立脚本以构建基础系统</td><td style="text-align:center">可以建立脚本以构建系统、文档、安装程序、生成发布概要并且在版本控制内打tag</td></tr><tr><td style="text-align:center"><em>自动化测试</em></td><td style="text-align:center">认为所有的测试都是测试员的工作</td><td style="text-align:center">能够编写自动化的单元测试，能够为正在编写的代码提出良好的测试用例</td><td style="text-align:center">按照TDD方式编写代码</td><td style="text-align:center">理解并能够设置自动化功能，自动加载、自动性能测试、自动UI测试等</td></tr></tbody></table><h3 id="Programming">Programming</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">$ 2^n$</th><th style="text-align:center">$n^2$</th><th style="text-align:center">$n$</th><th style="text-align:center">$log(n)$</th></tr></thead><tbody><tr><td style="text-align:center"><em>问题拆解</em></td><td style="text-align:center">只有复制黏贴才能复用的直线式代码</td><td style="text-align:center">能够把问题分散到多个函数中</td><td style="text-align:center">能够相处可以复用的函数/对象来解决整体的问题</td><td style="text-align:center">使用适宜的数据结构和算法，写出通用的面向对象代码来封装问题中易改变的层面</td></tr><tr><td style="text-align:center"><em>系统拆解</em></td><td style="text-align:center">无法跳到单一文件/类更高的层面</td><td style="text-align:center">在相同的平台/技术上能够分拆问题空间以及设计方案</td><td style="text-align:center">能够设计跨技术、跨平台的系统</td><td style="text-align:center">能够可视化和设计具有多种产品线和与外部系统集成的复杂系统。同时应该有能力设计支撑系统，比如监控、报告、故障恢复等等</td></tr><tr><td style="text-align:center"><em>交流</em></td><td style="text-align:center">无法向同伴表达想法、主意。拼写、语法欠缺</td><td style="text-align:center">同伴能了解你在说什么，有良好的拼写和语法能力</td><td style="text-align:center">能够和同伴进行高效的交流</td><td style="text-align:center">能够以明确的方式理解和交流思想、设计、创意、规范，并且适应各种上下文</td></tr><tr><td style="text-align:center"><em>单文件代码组织</em></td><td style="text-align:center">同一文件中组织没有依据</td><td style="text-align:center">按逻辑或可访问性分组方法</td><td style="text-align:center">代码分块，引用其他文件有良好的注释</td><td style="text-align:center">文档头部有许可声明，良好的注释，使用长空白。文档优雅</td></tr><tr><td style="text-align:center"><em>跨文件代码组织</em></td><td style="text-align:center">对跨文件代码组织一无所知</td><td style="text-align:center">相关文件在同一文件夹下</td><td style="text-align:center">每个文件有各自独立目的，比如一个类的定义、一个特性的实现</td><td style="text-align:center">在物理级别上的代码组织与设计密切匹配，查看文件名和文件夹分布可以深入了解设计</td></tr><tr><td style="text-align:center"><em>源码树组织</em></td><td style="text-align:center">一切都在一个文件夹下</td><td style="text-align:center">初步将代码分散进对应逻辑的文件夹</td><td style="text-align:center">没有循环依赖，二进制文件、库、文档、构建程序、第三方代码都组织进合适的文件夹内</td><td style="text-align:center">源码树的物理布局与逻辑层次、组织方式相匹配，可以通过目录名称合组织方式洞察设计理念</td></tr><tr><td style="text-align:center"><em>代码可读性</em></td><td style="text-align:center">单音节名称</td><td style="text-align:center">对文件名、变量、类、方法等有良好的的命名</td><td style="text-align:center">没有长功能，对不寻常代码、bug修复、代码假设等进行注释</td><td style="text-align:center">使用断言验证代码假设，自然的代码流（没有深度嵌套的方法或条件句）</td></tr><tr><td style="text-align:center"><em>防御式编程</em></td><td style="text-align:center">不知道这个概念</td><td style="text-align:center">检查代码中所有的参数，对关键的假设进行断言</td><td style="text-align:center">确保检查了返回值和处理了代码失败的异常</td><td style="text-align:center">有自己的库来帮助防御式编程，编写单元测试模拟故障</td></tr><tr><td style="text-align:center"><em>错误处理</em></td><td style="text-align:center">仅针对正常流程编码</td><td style="text-align:center">基本的对可能抛出异常/生成错误的代码进行错误处理</td><td style="text-align:center">确保错误/异常以正确的状态离开程序， 资源、连接、内存都被正确地清理</td><td style="text-align:center">在可能的异常进行编码检测， 在所有代码层级中维护一致的异常处理策略，具有对整个系统进行异常处理的指导方针</td></tr><tr><td style="text-align:center"><em>IDE</em></td><td style="text-align:center">基本用作文本编辑</td><td style="text-align:center">熟悉UI上的多种方式，能够通过菜单高效地使用IDE</td><td style="text-align:center">熟悉大部分常用操作的快捷键</td><td style="text-align:center">曾写过自定义宏</td></tr><tr><td style="text-align:center"><em>API</em></td><td style="text-align:center">需要经常查询文档</td><td style="text-align:center">能记住常用的API</td><td style="text-align:center">对API具有广度和深度的了解</td><td style="text-align:center">写过在 API 上的类库来帮助简化常用的任务以及给 API 填坑</td></tr><tr><td style="text-align:center"><em>框架</em></td><td style="text-align:center">除了核心平台没使用过其它任何框架</td><td style="text-align:center">听过但没用过平台上流行的框架</td><td style="text-align:center">精通多个框架，并精通这些框架的习语</td><td style="text-align:center">框架作者</td></tr><tr><td style="text-align:center"><em>需求分析</em></td><td style="text-align:center">拿到给定需求并按规格编码</td><td style="text-align:center">能够想到规格中缺失的问题</td><td style="text-align:center">理解完整的蓝图并产生整个需要被纳入规格的范围</td><td style="text-align:center">能够基于经验对给定需求建议更好的替代方案和流程</td></tr><tr><td style="text-align:center"><em>脚本处理</em></td><td style="text-align:center">不了解脚本工具</td><td style="text-align:center">BAT 文件/ shell 脚本</td><td style="text-align:center">Perl/Python/Ruby/VBScript/Powershell</td><td style="text-align:center">曾写过并发布过可重用代码</td></tr><tr><td style="text-align:center"><em>数据库</em></td><td style="text-align:center">认为 Excel 是数据库</td><td style="text-align:center">了解基本数据库概念、规范化、ACID、事务， 并能书写简单的 SELECT 语句</td><td style="text-align:center">能够设计良好的规范化的系统图式， 时时记住必须运行的查询,精通视图、存储过程、触发器和用户定义类型的使用， 了解集群和非集群索引间的差别， 精通 ORM 工具的使用</td><td style="text-align:center">可作为基本的数据库管理员， 性能优化， 索引优化， 编写高级 SELECT 查询， 能使用关系型 SQL 替换游标的使用， 理解数据在内部是如何存储的， 了解数据库应该如何做镜像、副本等， 理解两相提交如何运作</td></tr></tbody></table><h3 id="Experience">Experience</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">$ 2^n$</th><th style="text-align:center">$n^2$</th><th style="text-align:center">$n$</th><th style="text-align:center">$log(n)$</th></tr></thead><tbody><tr><td style="text-align:center"><em>专业语言经验</em></td><td style="text-align:center">命令式或面向对象</td><td style="text-align:center">命令式、面向对象和声明式(SQL)， 如果理解静态vs动态类型，弱类型vs强类型及静态推断类型有加分</td><td style="text-align:center">函数式， 如果理解惰性求值、柯里化、延续有加分</td><td style="text-align:center">并发(Erlang, Oz) 和逻辑(Prolog)</td></tr><tr><td style="text-align:center"><em>专业平台经验</em></td><td style="text-align:center">1</td><td style="text-align:center">2-3</td><td style="text-align:center">4-5</td><td style="text-align:center">6+</td></tr><tr><td style="text-align:center"><em>专业经验年限</em></td><td style="text-align:center">1</td><td style="text-align:center">2-5</td><td style="text-align:center">6-9</td><td style="text-align:center">10+</td></tr><tr><td style="text-align:center"><em>领域知识</em></td><td style="text-align:center">没有领域知识</td><td style="text-align:center">至少在该领域的一个产品上工作过</td><td style="text-align:center">在相同领域的多个产品上工作过</td><td style="text-align:center">领域专家， 在该领域设计并实现过多个产品/解决方案， 精通该领域使用的标准术语、协议</td></tr></tbody></table><h3 id="Knowledge">Knowledge</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">$ 2^n$</th><th style="text-align:center">$n^2$</th><th style="text-align:center">$n$</th><th style="text-align:center">$log(n)$</th></tr></thead><tbody><tr><td style="text-align:center"><em>开发工具</em></td><td style="text-align:center">仅限于主要的IDE</td><td style="text-align:center">知道一些流行且符合标准的备选工具</td><td style="text-align:center">对编辑器、调试器、IDE、开源的备选方案有很好的了解。比如了解或熟悉<a href="https://www.hanselman.com/blog/ScottHanselmans2014UltimateDeveloperAndPowerUsersToolListForWindows.aspx" target="_blank" rel="noopener">《Scott Hanselman 的威力工具表》</a></td><td style="text-align:center">实际编写过工具和脚本, 发表过有加分</td></tr><tr><td style="text-align:center"><em>代码库知识</em></td><td style="text-align:center">从未阅读过代码库</td><td style="text-align:center">基本了解代码布局，知道如何构建系统</td><td style="text-align:center">熟悉代码库工作原理， 实现过几个 BUG 修复，可能也有几个小特性实现</td><td style="text-align:center">在代码库中实现多个大的特性， 能够很容易构想大多数特性或 BUG 修改会对代码库造成的变更</td></tr><tr><td style="text-align:center"><em>新兴技术的知识</em></td><td style="text-align:center">没听说过新兴技术</td><td style="text-align:center">偶尔听过新兴技术</td><td style="text-align:center">下载过 alpha 预览/CTP/beta 版本，并阅读过一些文章和手册</td><td style="text-align:center">玩过预览版，并利用它构建过一些实际的东西， 将其分享给其它人有加分</td></tr><tr><td style="text-align:center"><em>平台内部</em></td><td style="text-align:center">不了解平台内部</td><td style="text-align:center">对平台内部如果运作有基本了解</td><td style="text-align:center">深入了解平台内部， 能够想象出平台如何接受程序并将其转换为可执行代码</td><td style="text-align:center">给平台内部写过工具来增强或提供有用信息。 如反汇编、反编译、调试器等</td></tr><tr><td style="text-align:center"><em>书籍</em></td><td style="text-align:center">菜鸟系列，21天系列，24小时系列，蠢货系列…</td><td style="text-align:center">《代码大全》，《别让我思考》, 《精通正则表达式》</td><td style="text-align:center">设计模式》，《人件》，《代码珠玑》，《算法设计手册》，《程序员修炼之道》，《人月神话》</td><td style="text-align:center">《计算机程序设计与解释》，《事务处理:概念与技术》，《计算机程序设计模型》，《计算机程序设计艺术》，《数据库系统导论》 C.J Date版，《Thinking Forth》 ，《Little Schemer》</td></tr><tr><td style="text-align:center"><em>博客</em></td><td style="text-align:center">没时间看</td><td style="text-align:center">经常阅读技术/编程/软件工程相关博客及听播客</td><td style="text-align:center">维护收集的有用文章和工具的博客链接</td><td style="text-align:center">维护收集的有用文章和工具的博客链接</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      A programmer to be。
    
    </summary>
    
    
      <category term="CheatSheet" scheme="https://neo1989.net/categories/CheatSheet/"/>
    
    
      <category term="Coder" scheme="https://neo1989.net/tags/Coder/"/>
    
  </entry>
  
  <entry>
    <title>LaTeX常用希腊字母</title>
    <link href="https://neo1989.net/CheatSheet/latex-greek-letters/"/>
    <id>https://neo1989.net/CheatSheet/latex-greek-letters/</id>
    <published>2020-01-17T07:41:20.000Z</published>
    <updated>2020-06-08T05:50:12.595Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">GreekLetters</th><th style="text-align:center">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">$\alpha$  $A$</td><td style="text-align:center">\alpha  A</td></tr><tr><td style="text-align:center">$\beta$  $B$</td><td style="text-align:center">\beta  B</td></tr><tr><td style="text-align:center">$\gamma$  $\Gamma$</td><td style="text-align:center">\gamma  \Gamma</td></tr><tr><td style="text-align:center">$\delta$  $\Delta$</td><td style="text-align:center">\delta  \Delta</td></tr><tr><td style="text-align:center">$\epsilon$  $\varepsilon$ $E$</td><td style="text-align:center">\epsilon  \varepsilon E</td></tr><tr><td style="text-align:center">$\zeta$  $Z$</td><td style="text-align:center">\zeta  Z</td></tr><tr><td style="text-align:center">$\eta$  $H$</td><td style="text-align:center">\eta  H</td></tr><tr><td style="text-align:center">$\theta$  $\vartheta$  $\Theta$</td><td style="text-align:center">\theta  \vartheta  \Theta</td></tr><tr><td style="text-align:center">$\iota$  $I$</td><td style="text-align:center">\iota  I</td></tr><tr><td style="text-align:center">$\kappa$  $K$</td><td style="text-align:center">\kappa  K</td></tr><tr><td style="text-align:center">$\lambda$  $\Lambda$</td><td style="text-align:center">\lambda  \Lambda</td></tr><tr><td style="text-align:center">$\mu$  $M$</td><td style="text-align:center">\mu  M</td></tr><tr><td style="text-align:center">$\nu$  $N$</td><td style="text-align:center">\nu  N</td></tr><tr><td style="text-align:center">$\xi$  $\Xi$</td><td style="text-align:center">\xi  \Xi</td></tr><tr><td style="text-align:center">$\omicron$  $O$</td><td style="text-align:center">\omicron  O</td></tr><tr><td style="text-align:center">$\pi$  $\Pi$</td><td style="text-align:center">\pi  \Pi</td></tr><tr><td style="text-align:center">$\rho$  $\varrho$  $P$</td><td style="text-align:center">\rho  \varrho  P</td></tr><tr><td style="text-align:center">$\sigma$  $\Sigma$</td><td style="text-align:center">\sigma  \Sigma</td></tr><tr><td style="text-align:center">$\tau$  $T$</td><td style="text-align:center">\tau  T</td></tr><tr><td style="text-align:center">$\upsilon$  $\Upsilon$</td><td style="text-align:center">\upsilon  \Upsilon</td></tr><tr><td style="text-align:center">$\phi$  $\varphi$  $\Phi$</td><td style="text-align:center">\phi  \varphi  \Phi</td></tr><tr><td style="text-align:center">$\chi$  $X$</td><td style="text-align:center">\chi  X</td></tr><tr><td style="text-align:center">$\psi$  $\Psi$</td><td style="text-align:center">\psi  \Psi</td></tr><tr><td style="text-align:center">$\omega$  $\Omega$</td><td style="text-align:center">\omega  \Omega</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      Latex greek letters。
    
    </summary>
    
    
      <category term="CheatSheet" scheme="https://neo1989.net/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>机器学习之数学</title>
    <link href="https://neo1989.net/MachineLearning/math-basic/"/>
    <id>https://neo1989.net/MachineLearning/math-basic/</id>
    <published>2020-01-08T10:59:49.000Z</published>
    <updated>2020-06-04T09:30:02.544Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>The enthusiastic practitioner who is interested to learn more about the magic behind successful machine learning algorithms currently faces a daunting set of pre-requisite knowledge:</p><ul><li>Programming languages and data analysis tools</li><li>Large-scale computation and the associated frameworks</li><li>Mathematics and statistics and how machine learning builds on it</li></ul></blockquote><h2 id="常用符号">常用符号</h2><table><thead><tr><th style="text-align:center">Symble</th><th style="text-align:center">Name</th><th style="text-align:center">Explanation / Examples</th></tr></thead><tbody><tr><td style="text-align:center">$\mathbb{R} \ \mathbf{R}$</td><td style="text-align:center">real numbers</td><td style="text-align:center">$ \pi \in \mathbb{R} $</td></tr><tr><td style="text-align:center">$\mathbb{C} \ \mathbf{C}$</td><td style="text-align:center">complex numbers</td><td style="text-align:center">$ i \in \mathbb{C} $</td></tr><tr><td style="text-align:center">$\sum$</td><td style="text-align:center">summation 求和</td><td style="text-align:center">$ \sum_{k=1}^n a_{k} = a_1 + a_2 + \dots + a_n $</td></tr><tr><td style="text-align:center">$\prod$</td><td style="text-align:center">product 积</td><td style="text-align:center">$ \prod_{k=1}^n a_{k} = a_1 \cdot a_2 \cdot \dots \cdot a_n $</td></tr><tr><td style="text-align:center">$\propto$</td><td style="text-align:center">proportionality 比例性</td><td style="text-align:center">$y \propto x$ means that y = kx for some constant k</td></tr><tr><td style="text-align:center">$\forall$</td><td style="text-align:center">universal quantification <br/> 通用量化</td><td style="text-align:center">$ \forall n \in N, n^2 \ge n $</td></tr><tr><td style="text-align:center">$\int$</td><td style="text-align:center">integral 积分</td><td style="text-align:center">$ \int_a^b x^2 dx = \frac{b^3 - a^3}{3} $</td></tr><tr><td style="text-align:center">$’$</td><td style="text-align:center">derivative 导数</td><td style="text-align:center">If $f(x) := x^2$, then $f’(x) = 2x$.</td></tr><tr><td style="text-align:center">$\partial$</td><td style="text-align:center">partial derivative <br /> 偏导数</td><td style="text-align:center">If $f(x, y) := x^2 y$, then $ \frac{\partial f}{\partial x} = 2xy $.</td></tr><tr><td style="text-align:center">$\nabla$</td><td style="text-align:center">gradient 梯度</td><td style="text-align:center">$ \nabla \cdot \overset{\rightharpoonup}{v} $ = $ \frac{\partial v_x}{\partial x} + \frac{\partial v_y}{\partial y} + \frac{\partial v_z}{\partial z}$</td></tr><tr><td style="text-align:center">$\Delta$</td><td style="text-align:center">delta</td><td style="text-align:center">$ \frac{\Delta y}{\Delta x} $ is the gradient of a straight line.</td></tr><tr><td style="text-align:center">$P(A|B)$</td><td style="text-align:center">probability 概率</td><td style="text-align:center">Probability of A given B</td></tr><tr><td style="text-align:center">$\mathrm{E}$</td><td style="text-align:center">expected value 期望值</td><td style="text-align:center">$\mathrm{E}[X]$ = $ \sum_i^\infty x_i p_i $</td></tr><tr><td style="text-align:center">$| \ldots |$</td><td style="text-align:center">determinant 行列式</td><td style="text-align:center">$ \det(u, v) = \begin{vmatrix} 1 &amp; 2 \\ 2 &amp; 9  \end{vmatrix} = 1 \times 9 - 2 \times 2 = 5 $</td></tr><tr><td style="text-align:center">$\odot$</td><td style="text-align:center">Hadamard product <br/> 哈达玛积</td><td style="text-align:center">$ \begin{vmatrix} 1 &amp; 2 \\ 2 &amp; 4 \end{vmatrix} \odot \begin{vmatrix} 1 &amp; 2 \\ 0 &amp; 1 \end{vmatrix} = \begin{vmatrix} 1\cdot1 &amp; 2\cdot2 \\ 2\cdot0 &amp; 4\cdot1 \end{vmatrix} = \begin{vmatrix} 1 &amp; 4 \\ 0 &amp; 4 \end{vmatrix} $</td></tr><tr><td style="text-align:center">$\hat a$</td><td style="text-align:center">estimator <br/> 估计量</td><td style="text-align:center">$\hat \theta$ is the estimator or the estimate for the parameter $\theta$</td></tr><tr><td style="text-align:center">$\sigma$</td><td style="text-align:center">selection</td><td style="text-align:center">$ \sigma_{a \theta b} (R)  = \{t : t \in R,\ t(a) \ \theta \ t(b)\} $</td></tr><tr><td style="text-align:center">$argmax$</td><td style="text-align:center">arguments of the maxima</td><td style="text-align:center">函数输出尽可能大的输入或参数</td></tr></tbody></table><h2 id="常用术语">常用术语</h2><table><thead><tr><th style="text-align:center">Name</th><th style="text-align:center">Explanation / Examples</th></tr></thead><tbody><tr><td style="text-align:center">Covariance <br/> 协方差</td><td style="text-align:center">$cov(X, Y) = \mathrm{E}((X - \mu)(Y - \nu)) = \mathrm{E}(X \cdot Y) - \mu \nu$  <br/>  { $\mathrm{E}(X) = \mu$ , $\mathrm{E}(X) = \nu$ }</td></tr><tr><td style="text-align:center">Variance <br/> 方差</td><td style="text-align:center">$var(V) = E[(X - \mu)^2] = cov(X, X)$</td></tr><tr><td style="text-align:center">Standard Deviation <br/> 标准差</td><td style="text-align:center">$\sigma = \sqrt{\frac{1}{N} \sum_{i=1}^{N} (x_i - \mu)^2 }$ <br/> { $\mathrm{E}(x) = \mu$ }</td></tr><tr><td style="text-align:center">Mean Absolute Error <br/> 平均绝对误差</td><td style="text-align:center">$\mathrm{MAE} = \frac{1}{n} {\sum_{i=1}^{n} \left| Y_i - \hat{Y_i} \right|} $ <br/>  { $Y_{i}$: 观察值, $\hat{Y_{i}}$: 预测值 }</td></tr><tr><td style="text-align:center">Mean Squared Error <br/> 均方误差</td><td style="text-align:center">$\mathrm{MSE} = \frac{1}{n} \sum_{i=1}^{n} (Y_i - \hat{Y_i})^2 $ <br/>  { $Y_{i}$: 观察值, $\hat{Y_{i}}$: 预测值 }</td></tr><tr><td style="text-align:center">Root Mean Square Error <br/> 均方根误差</td><td style="text-align:center">$\mathrm{RMSE} = \sqrt{\mathrm{MSE}}$</td></tr></tbody></table><h2 id="激活函数">激活函数</h2><pre><code>1. Sigmoid</code></pre><p>$$<br>\begin{align}<br>S(x) = \frac{1 + e^{-x}}{1} = \frac{e^x + 1}{e^x}<br>\end{align}<br>$$</p><pre><code>2. Hyperbolic tangent (tanh) 双曲正切</code></pre><p>$$<br>\begin{align}<br>\tanh(x) = \frac{\sinh(x)}{\cosh(x)} = \frac {e^x - e^{-x}}{e^x + e^{-x}} = \frac{e^{2x} - 1}{e^{2x} + 1}<br>\end{align}<br>$$</p><pre><code>3. Rectifier (ReLU) 修正线性单元 </code></pre><p>$$<br>f(x) = x^+ = max(0, x)<br>$$</p><pre><code>4. Leaky ReLU 带泄露修正线性单元</code></pre><p>$$<br>f(x) =<br>\begin{cases}<br>x &amp;\ x \gt 0, \\<br>0.01x &amp;\ otherwise.<br>\end{cases}<br>$$</p><h2 id="高等数学">高等数学</h2><pre><code>1. 数列极限</code></pre><p>$$<br>\lim_{n \to \infty} x_n = a,  \forall \epsilon \gt 0，\exists \ 正整数 N，当n \gt N 时, \left| x_n - a \right| &lt; \epsilon .<br>$$</p><pre><code>2. 两个重要的极限</code></pre><p>$$<br>\lim_{x \to 0} \frac{\sin x}{x} = 1<br>$$</p><p>$$<br>\lim_{x \to \infty} (1 + \frac{1}{x})^x = e<br>$$</p><pre><code>3. 泰勒公式</code></pre><p>$$<br>f(x) = \sum_{n = 0}^{\infty} \frac{f^{(n)}(a)}{n!} \cdot (x - a^n) \\<br>f^{(n)}(a) 表示函数f在点a处的n阶导数, 如果a=0，这个级数称为麦克劳林级数。<br>$$</p><pre><code>4. 欧几里得距离 (Euclidean distance)</code></pre><p>$$<br>d(p, q) = \sqrt{\sum_{i=1}^n (q_i - p_i)^2}<br>$$</p><pre><code>5. 明氏距离 (Minkowski distance)</code></pre><p>$$<br>D(X,Y) = d_p(x, y) = (\sum_{i=1}^n \left|x_i - y_i\right|^p)^{\frac{1}{p}}<br>$$</p><h2 id="线性代数">线性代数</h2><pre><code>1. 矩阵</code></pre><p>$$<br>A = [a_{ij}]_{m \times n}<br>$$</p><pre><code>2. 矩阵的转置</code></pre><p>$$<br>A^T = [a_{ji}]_{n \times m}<br>$$</p><pre><code>3. 秩</code></pre><p>$$<br>A = \begin{bmatrix} 1 &amp; 1 &amp; 1 &amp; 1 \\ 1 &amp; 2 &amp; 3 &amp; 4 \\ 4 &amp; 3 &amp; 2 &amp; 1 \end{bmatrix} = \begin{bmatrix} 1 &amp; 0 &amp; -1 &amp; -2 \\ 0 &amp; 1 &amp; 2 &amp; 3 \\ 0 &amp; 0 &amp; 0 &amp; 0 \end{bmatrix} \\<br>Rank(A) = Rank(A^T) = 2<br>$$</p><pre><code>4. 零空间</code></pre><p>$$<br>矩阵 A 的零空间 N(A) 就是由满足 A \cdot \overset{\rightharpoonup}{x} = 0 的所有向量 \overset{\rightharpoonup}{x} 的集合。\\<br>一个矩阵的零空间为 \overset{\rightharpoonup}{0}  的充分必要条件是这个矩阵的所有列线性无关。<br>$$</p><pre><code>5. 左零空间</code></pre><p>$$<br>矩阵 A 的左零空间是 A 的转置的零空间。 \\<br>N(A^T) = \begin{Bmatrix} \overset{\rightharpoonup}{x}| A^T \overset{\rightharpoonup}{x} = \overset{\rightharpoonup}{0} \end{Bmatrix} = \begin{Bmatrix} \overset{\rightharpoonup}{x}| \overset{\rightharpoonup}{x}^T A = \overset{\rightharpoonup}{0}^T \end{Bmatrix}<br>$$</p><pre><code>6. 列空间 (由每一列的向量张成的空间)</code></pre><p>$$<br>A_{m \times n} = \begin{bmatrix} \overset{\rightharpoonup}{v_1} &amp; \overset{\rightharpoonup}{v_2} \ldots \overset{\rightharpoonup}{v_n} \end{bmatrix}<br>$$</p><p>$$<br>\therefore \ C(A) = span(\overset{\rightharpoonup}{v_1},  \overset{\rightharpoonup}{v_2}, \ldots, \overset{\rightharpoonup}{v_n})<br>$$</p><pre><code>7. 行空间</code></pre><p>$$<br>R(A) = C(A^T)<br>$$</p><h2 id="概率论">概率论</h2><pre><code>1. 条件概率</code></pre><p>$$<br>P(A|B) = \frac{P(A \cap B)}{P(B)}<br>$$</p><pre><code>2. 贝叶斯</code></pre><p>$$<br>\begin{align}<br>\displaystyle P(A|B) = \frac{\frac{P(A \cap B)}{P(A)} \cdot P(A)}{P(B)} =  \frac{P(B|A) \cdot P(A)}{P(B)}<br>\end{align}<br>$$</p><pre><code>3. Chain Rule</code></pre><p>$$<br>P(F, G, P) = P(F) P(G, P | F) = P(F) P(G | F) P(P | F, G)<br>$$</p>]]></content>
    
    <summary type="html">
    
      Some basic mathematics skills。
    
    </summary>
    
    
      <category term="MachineLearning" scheme="https://neo1989.net/categories/MachineLearning/"/>
    
    
      <category term="Math" scheme="https://neo1989.net/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>The End Is Not the End, 2019</title>
    <link href="https://neo1989.net/Summary/2019-summary/"/>
    <id>https://neo1989.net/Summary/2019-summary/</id>
    <published>2019-12-31T13:22:00.000Z</published>
    <updated>2020-05-18T04:25:21.307Z</updated>
    
    <content type="html"><![CDATA[<h5 id="时光时光你慢些吧。">时光时光你慢些吧。</h5><h4 id="『2019』">『2019』</h4><pre><code>报名了乐队新年演出，没上，怂 媳妇第一次在我家过年，我爸妈很开心，媳妇爸妈估计有点失落新女婿拜年，各种优待，没喝一滴酒装修队交房，全程媳妇操心进数据中心部门做研发去日本直岛，表现不好，媳妇说是第一次想到离婚办了欢乐谷年卡终于搬家了，通勤时间变成单程一个半小时吉他课上完了，学了十几首指弹，并不熟媳妇一家来上海老苏手术住院，还好不是大毛病，第一次开夜车上海到安庆三十岁生日，开始奔四了有人生娃、有人离婚、有人出轨干了一个月客户端开发（用Electron重写）媳妇买了 Nintendo Switch公司大清洗，光杆了接手AI、数据采集相关的工作学数学、ML、NLP今年投（chao）资（gu）收益15%</code></pre><h4 id="『2020』">『2020』</h4><pre><code>开启新的十年 读书写字证券从业、基金从业强化机器学习入手Rust量化交易</code></pre>]]></content>
    
    <summary type="html">
    
      The summary of 2019 and new year&#39;s resolution.
    
    </summary>
    
    
      <category term="Summary" scheme="https://neo1989.net/categories/Summary/"/>
    
    
  </entry>
  
  <entry>
    <title>The End Is Not the End, 2018</title>
    <link href="https://neo1989.net/Summary/2018-summary/"/>
    <id>https://neo1989.net/Summary/2018-summary/</id>
    <published>2018-12-31T13:20:00.000Z</published>
    <updated>2020-03-25T16:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="论及生死，愿我们从容。">论及生死，愿我们从容。</h5><h4 id="『2018』">『2018』</h4><pre><code>左小臂收获纹身一枚洗肉丸 、遛肉丸、带肉丸踩雪房客爽约，换房客A股投机吃瘪，借的钱劝退一个测试，第一次，不酷宠物医院寄养肉丸开车带媳妇和肉丸去崇明九溪拍婚纱照肉丸去世，司司哭成泪人种了棵树，肉丸在下面老徐要离队去平安，试着挽留，第一次，不酷当新郎，新娘很美 收房装修开车去了趟西塘，无法接受古建筑里面的蹦迪，逃撸了张一对二半价券，开始重拾吉他指弹公司收编，这边减了一个试用期测试、一个试用期产品组乐队，瞎搞</code></pre><h4 id="『2019』">『2019』</h4><pre><code>攒钱搬家</code></pre>]]></content>
    
    <summary type="html">
    
      The summary of 2018 and new year&#39;s resolution.
    
    </summary>
    
    
      <category term="Summary" scheme="https://neo1989.net/categories/Summary/"/>
    
    
  </entry>
  
  <entry>
    <title>The End Is Not the End, 2017</title>
    <link href="https://neo1989.net/Summary/2017-summary/"/>
    <id>https://neo1989.net/Summary/2017-summary/</id>
    <published>2017-12-31T14:20:00.000Z</published>
    <updated>2020-03-25T16:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="婚姻是一次长谈，杂以争辩。">婚姻是一次长谈，杂以争辩。</h5><h4 id="『2017』">『2017』</h4><pre><code>带父母见了司司家长喝断片，120急救，吸氧领证买房泰国蜜月、给媳妇拍照交房、第一次收租拿了驾照带小肉丸回家 喂肉丸、洗肉丸、遛肉丸、晒肉丸、拍肉丸...升了技术经理，六个开发一个测试，两个产品一个UI为了照顾肉丸，国庆分批回家最后一次伴郎，献给了表弟参加柏老板的婚礼，跳了段《Panama》这个冬天，因为肉丸而温暖今年零投(chao)资(gu)，欠了一屁股债</code></pre><h4 id="『2018』">『2018』</h4><pre><code>攒钱养肉丸办婚礼</code></pre>]]></content>
    
    <summary type="html">
    
      The summary of 2017 and new year&#39;s resolution.
    
    </summary>
    
    
      <category term="Summary" scheme="https://neo1989.net/categories/Summary/"/>
    
    
  </entry>
  
  <entry>
    <title>The End Is Not the End, 2016</title>
    <link href="https://neo1989.net/Summary/2016-summary/"/>
    <id>https://neo1989.net/Summary/2016-summary/</id>
    <published>2016-12-31T14:57:48.000Z</published>
    <updated>2020-03-25T16:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="与人相处，最大的困难并不是牺牲和付出，而是理解对方的牺牲和付出。">与人相处，最大的困难并不是牺牲和付出，而是理解对方的牺牲和付出。</h5><h4 id="『2016』">『2016』</h4><pre><code>去了趟厦门。报名开始学车。第二次西装皮鞋、当伴郎。用起了Golang，React+Redux。焦虑惶恐，还不小心捡起了C/C++。生涯第三次跳槽, Python + Vuejs。搬了一次家。司司捣腾了个角落, 有书有阳光还有豆豆袋。体重保持在70KG左右。过了第二十七个生日。穿衣风格被司司逐步改善。朋友越来越少。主账户全年收益率-3.31%。入了Kindle。读了71本书。却没写几个字。</code></pre><h4 id="『2017』">『2017』</h4><pre><code>建立自信。学习更好的表达。优化自己，情绪管理、精力管理。深入学习Python、Golang、Linux。入门大数据、机器学习。带司司出趟远门。入门摄影、考虑亲自给司司拍婚纱照。学首新曲子，吉他或者口琴。有自己的家。继续学习投(chao)资(gu)。控制消费。在多读些书，得写。拿驾照。控制体重。但求平安喜乐。</code></pre>]]></content>
    
    <summary type="html">
    
      The summary of 2016 and new year&#39;s resolution.
    
    </summary>
    
    
      <category term="Summary" scheme="https://neo1989.net/categories/Summary/"/>
    
    
  </entry>
  
  <entry>
    <title>《Google工作整理术》</title>
    <link href="https://neo1989.net/Reading/getting-organized/"/>
    <id>https://neo1989.net/Reading/getting-organized/</id>
    <published>2016-08-11T07:50:03.000Z</published>
    <updated>2020-06-08T05:50:12.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gists-摘要">Gists 摘要</h2><pre><code>为了实现大脑压力最小化，要把生活组织得有条不紊。让信息尽可能快地离开大脑。多重任务通常会让你降低效率。利用故事去记忆。仅仅因为一直都是按照特定方式做某事，并不意味着就该永远这样做。知识不是力量，共享知识才是力量。进行组织安排时，要绕开的是实际制约而不是假性制约。对自己要坦诚，但是千万不要自我批评。要懂得什么时候忽略制约。在发动汽车之间，一定要确切的搞清楚自己要到哪里去，还要知道选择什么途径去。在实现目标的方式上要灵活变通。不要给信息归档，用的时候去搜索就行了。大脑中只保存真正需要记忆的内容。大块内容要化整为零。每周拿出些时间回顾关键信息。没有一个完美无缺的组织方法。在数字信息中加上相应的关键词，以便日后容易找到。尽量使用已经上手的工具。及时加注释，有助于以后了解背景信息。把类似的任务放在一起。把工作和生活融为一体，而不是力图在二者之间求平衡。</code></pre><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B01AFVFRBA" target="_blank" rel="noopener">Google工作整理术</a></p>]]></content>
    
    <summary type="html">
    
      信息太多、时间太少，Google帮你做整理。
    
    </summary>
    
    
      <category term="Reading" scheme="https://neo1989.net/categories/Reading/"/>
    
    
  </entry>
  
  <entry>
    <title>《投资者的敌人》</title>
    <link href="https://neo1989.net/Reading/the-investors-enemy/"/>
    <id>https://neo1989.net/Reading/the-investors-enemy/</id>
    <published>2016-02-12T06:40:31.000Z</published>
    <updated>2020-06-08T05:50:12.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gists-摘要">Gists 摘要</h2><ol><li><p>散户投资者的损失27%来自于错误的股票和交易。32%来自于券商对投资者的佣金，34%来自政府征收的与交易相关的税收和费用，余下的7%来自于投资者不能够正确地选择投资时机。</p></li><li><p>无论是谁的阴谋，无论是谁发起的战争，只要自己能够进行充分的防御和充分的准备，就可以对自己的投资真正负责，至少可以做到本金安全。</p></li><li><p>投资者的动物精神制造了一个又一个泡沫，而这泡沫难以进行预测和解释。</p></li><li><p>平均持有时间少于三个月和多于两年的投资者，其收益非常底。散户的换手率如此之高，背后的原因是其不太多元化的投资组合。</p></li><li><p>散户投资者的信息来源比较集中，而且对同样的信息反应趋于同质化。</p></li><li><p>当股票交易量放大和当股价创出新高或新底的时候，散户才会开始关注并去大量地交易这些股票。</p></li><li><p>对于机构投资者而言，散户的投资行为可以反映市场里面的情绪，也可以给其他投资者提供关于市场的有价值的信息。这些信息有助于判断整个市场能够向什么样的方向发展。</p></li><li><p>一个国家的银行业规模在全国经济总量中所占的比例越大，那么这个国家的基金管理行业的发展规模就会越小。</p></li><li><p>中国散户投资基金的年均成本是3.5%～4%（1.5管理费+0.21托管费+（1.44申购费+0.51托管费）x1.2换手率），比国际水平1.9%高出近一倍，这里还不包括通过摊薄基金净值而发生的市场费用。</p></li><li><p>人们对直观而容易处理的形象过于关注，而且往往会忽略概率论中的大数定理。</p></li><li><p>历史上有且仅有美盛的米勒基金连续15年（91～05）跑赢大盘，而05年以后，除了09年，米勒都输了。</p></li><li><p>收益来自于风险、风格、技巧和运气。承担高风险的收益不可持续也不值得鼓励；风格决定选择但不能确定其准确性；技巧能力的衡量必须建立在风险和风格之上；而运气与以上三点相比，不可预测也不可重复。</p></li><li><p>基金公司作为整体，它的业绩是不可能跑过整个股票大市的（投资积极基金只能是赚得少，赔的多，应关注消极或被动型基金）；而且，为了收益，不但要关注基金公司能否战胜市场，更要重视如何降低交易成本（公司、经理、入场和出场时间等）。</p></li><li><p>基于直觉的判断往往可靠，我们的最基本的五感都不够客观理性，耳听为虚、眼见也为虚、盲人摸象（触觉），嗅觉味觉就更别提了。</p></li><li><p>投资的难题在于投资者事先很难判断哪些信息对投资者真正有帮助。在做决策过程中，我们也会产生幻觉，看到或者相信一些根本就不存在的事物和信息。</p></li><li><p>让人们在不准确了解自己和他人情况的前提下，对自己和别人的相对能力进行评价是极其困难的。类似的，投资者在股市中进行投资也是如此。</p></li><li><p>我们对货币的价值是一个理解，对于货币采取一种什么样的形式表现出来是另外一个理解。只有对风险举重若轻的态度，只有克服了对金钱和名誉的追逐，才能在不同的市场环境里，对于风险和受益的分配做出准确的了解和判断，才能成为一个好的投资者。</p></li><li><p>资本市场在很多方面还不如赌场，资本市场的交易环节会有交易成本；资本市场爱出老千（信息极度不对称）；资本市场合法地鼓励散户进场给别人充当提款机。</p></li><li><p>散户的竞争对手不是其他散户，而是专业机构、大户庄家、券商和私募基金。</p></li><li><p>泡沫的背后都是货币的泛滥，总是无一例外地以流动性的收紧，资产价格的大跌和投资者的大规模损失而收场。</p></li><li><p>房地产一直是泡沫经济比较眷顾的行业。一方面，房地产看起来收到土地这种自然资源的限制好像具有很强的稀缺性；另一方面，由于房地产交易杠杆性和缺乏相应的卖空（融券）机制，关于房地产的负面信息和想法往往很难被反映到市场和价格中去。这两点导致房地产很容易大起大落。</p></li><li><p>如果印钱能解决危机的话，这世界上就不会有危机了，经济和金融学科也就没有存在的必要了。</p></li><li><p>如果学习过程中有比较迅速、频繁的反馈，而且得到的反馈比较明确，那么人们学习起来比较有效。然而，真实的世界经历却是一个不太频繁、比较缓慢而相当模糊的反馈过程。</p></li><li><p>信息可以助长投资者的信心，但不能帮助投资者提升自己的业绩。</p></li><li><p>投资是一个非常复杂的过程，这是因为预测是很难的一件事情，而且如果你的预测不能得到准确的反馈的话（无法进行反思改进），这个预测就会变得更难。</p></li><li><p>投资者和资本市场都不喜欢大而全的多元化企业。整合整个产业链并不能保证效率一定提升，而专业化才有助于释放公司核心价值并提升公司股价。</p></li><li><p>公司高管做出很多重大决定的时候，首先想到的不是股东、员工或者公司的价值，而是自身的利益。</p></li><li><p>在职消费完全是以股东的利益为代价给公司高管提供福利。</p></li><li><p>交易员通过提供流动性（中介服务）和冒风险（用股东的钱）来获利。赚钱的时候他们更赚，赔钱的时候他们不赔。</p></li><li><p>在泡沫出现的时候，卖方机构（经纪人）会唱空看多，给投资者提供与交易部门完全相反的研究报告或推荐意见。而相对简单的资产管理行业的买方机构也会利用信息不对称与投资者技巧风险意识缺乏来进行合法欺诈。</p></li><li><p>明星分析师不是预测最准的，而是客户最满意的。他们可以利用信息传导不对称机制，偏袒大客户，合法提供内部信息，从而获得好评。因此，券商的行研部门并非研究部门，而是销售业务的辅助部门。</p></li><li><p>重要的是你什么时候听到了这个信息，是不是听到了公允的信息。选择性偏见和自我归功偏见都使投资者觉得他们可以做得更好，而且已经做得很好了。</p></li><li><p>波动就是风险，不但要有效提升投资收益。而且还要有效降低投资收益中的风险或者波动性。</p></li><li><p>如果模型只是基于历史数据分析，那么注定不可能准确描述未来的情况，也不必说通过模型工具管控好风险。</p></li><li><p>死亡是生命最伟大的发明，维持经营不善的企业，是对社会资源的浪费。只有允许破产，资本市场才能区分风险高低，才能解放和有效分配社会资源，发挥市场决定性作用。</p></li><li><p>数据的质量，无论对于学术界、实物界还是决策层，都是制定政策过程中最为重要的基础。</p></li><li><p>禁止卖空措施只能延缓泡沫，却导致更长和更惨烈的下挫。房市没有卖空机制，负面看法没法表达，不能被及时、准确、公正地被市场所反映，以至泡沫往往持续时间过长，导致更长时间的下跌和调整。</p></li><li><p>投资不能输在起跑线上，别在还没有开始投资的时候，就已经支付高额的交易成本了。</p></li><li><p>如果从市场演进和发展的角度看待，对过程的监管可能会比对结果的监管更有效。</p></li></ol><h2 id="Reference-参考">Reference 参考</h2><p>[1] <a href="https://www.amazon.cn/dp/B014D4V20K" target="_blank" rel="noopener">投资者的敌人</a></p>]]></content>
    
    <summary type="html">
    
      投资者必须掌控自己的冲动，洞察他人的冲动。
    
    </summary>
    
    
      <category term="Reading" scheme="https://neo1989.net/categories/Reading/"/>
    
    
      <category term="Financial" scheme="https://neo1989.net/tags/Financial/"/>
    
  </entry>
  
  <entry>
    <title>The End Is Not the End, 2015</title>
    <link href="https://neo1989.net/Summary/2015-summary/"/>
    <id>https://neo1989.net/Summary/2015-summary/</id>
    <published>2015-12-31T15:57:48.000Z</published>
    <updated>2020-03-25T16:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="无论我们曾爱过多少人，最后留下来的，一定是那个让你习以为常的人。">无论我们曾爱过多少人，最后留下来的，一定是那个让你习以为常的人。</h5><h4 id="『2015』">『2015』</h4><pre><code>开始了新的缘分。搬了两次家。被迫放生了狗狗。涨了点工资。终于买了MBP。主账户全年收益率42.84%。Hermes改名Demeter，截至年底正收益。换了发型。重拾吉他、十孔口琴。逐渐在走深刻（装B）路线，不愿逗比。读了几本书，没记住多少。有人结婚、有人离婚、有人生娃。游泳，体重保持在70KG左右。崇明烧烤、宁波奉化漂流。接触了lua、Cloudstack、Docker、Openstack。</code></pre><h4 id="『2016』">『2016』</h4><pre><code>真诚、勇敢的爱。强化golang、docker、openstack，深入Linux底层、网络、存储。Head First PMP。要么跳槽、要么带项目。再多读些书，还得写。继续学习投(chao)资(gu)， 保持收益为正。继续深刻（装B）。英语。拿驾照。减肥增肌。拒绝过度消费（月光、年光）。出趟远门。</code></pre>]]></content>
    
    <summary type="html">
    
      The summary of 2015 and new year&#39;s resolution.
    
    </summary>
    
    
      <category term="Summary" scheme="https://neo1989.net/categories/Summary/"/>
    
    
  </entry>
  
</feed>
